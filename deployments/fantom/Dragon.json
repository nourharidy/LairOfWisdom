{
  "address": "0x3141A1a533E8c922AaB165393824E62A7E27aE2a",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_egg",
          "type": "address"
        },
        {
          "internalType": "contract Lair",
          "name": "_lair",
          "type": "address"
        },
        {
          "internalType": "address[2]",
          "name": "_parents",
          "type": "address[2]"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "trainer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "Attack",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "trainer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "parent",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "egg",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "childName",
          "type": "string"
        }
      ],
      "name": "Breed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "trainer",
          "type": "address"
        }
      ],
      "name": "Clean",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "attacker",
          "type": "address"
        }
      ],
      "name": "Damaged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "trainer",
          "type": "address"
        }
      ],
      "name": "Feed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "trainer",
          "type": "address"
        }
      ],
      "name": "Heal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "trainer",
          "type": "address"
        }
      ],
      "name": "Play",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "trainer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "parent",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "childName",
          "type": "string"
        }
      ],
      "name": "ProposeBreed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "parent",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "childName",
          "type": "string"
        }
      ],
      "name": "ReceiveBreedProposal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "trainer",
          "type": "address"
        }
      ],
      "name": "Sleep",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "trainer",
          "type": "address"
        }
      ],
      "name": "UpgradeAttackCooldown",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "trainer",
          "type": "address"
        }
      ],
      "name": "UpgradeDamage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "trainer",
          "type": "address"
        }
      ],
      "name": "UpgradeHealing",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "trainer",
          "type": "address"
        }
      ],
      "name": "UpgradeMaxHealth",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "contract Dragon",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "attack",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "attackCooldown",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Dragon",
          "name": "parent",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "childName",
          "type": "string"
        }
      ],
      "name": "breed",
      "outputs": [
        {
          "internalType": "contract Egg",
          "name": "_egg",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "breedCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Dragon",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "breedProposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canAttack",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canBreed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canUpgrade",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "clean",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "damage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "egg",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBoredom",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHunger",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSleepiness",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUncleanliness",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "heal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "health",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "healthRegeneration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lair",
      "outputs": [
        {
          "internalType": "contract Lair",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxHealth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "onAttack",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "childName",
          "type": "string"
        }
      ],
      "name": "onBreedProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "parents",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "play",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Dragon",
          "name": "parent",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "childName",
          "type": "string"
        }
      ],
      "name": "proposeBreeding",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "secondsUntilAttack",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "secondsUntilBreed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "secondsUntilUpgrade",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sleep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "trust",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "upgradeAttackCooldown",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "upgradeDamage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "upgradeHealing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "upgradeMaxHealth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xbad85ffc90b301ee911802155519abe92d19d87b6bda2933767e35ccd1c9da2b",
  "receipt": {
    "to": null,
    "from": "0x89f41ba463bA837d53b4dB102CfCb6b44c789BCd",
    "contractAddress": "0x3141A1a533E8c922AaB165393824E62A7E27aE2a",
    "transactionIndex": 12,
    "gasUsed": "2381760",
    "logsBloom": "0x
    "blockHash": "0x00008718000004d7fc189fa7167c3fea2e3d23e52bc1f1ef32c9cec265d6d55b",
    "transactionHash": "0xbad85ffc90b301ee911802155519abe92d19d87b6bda2933767e35ccd1c9da2b",
    "logs": [],
    "blockNumber": 16995565,
    "cumulativeGasUsed": "3258123",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x0000000000000000000000000000000000000000",
    "0x0000000000000000000000000000000000000000",
    [
      "0x0000000000000000000000000000000000000000",
      "0x0000000000000000000000000000000000000000"
    ],
    "test"
  ],
  "solcInputHash": "c4413e400ce5fe2090f9b24ef8569743",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_egg\",\"type\":\"address\"},{\"internalType\":\"contract Lair\",\"name\":\"_lair\",\"type\":\"address\"},{\"internalType\":\"address[2]\",\"name\":\"_parents\",\"type\":\"address[2]\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trainer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"Attack\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trainer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"parent\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"egg\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"childName\",\"type\":\"string\"}],\"name\":\"Breed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trainer\",\"type\":\"address\"}],\"name\":\"Clean\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"attacker\",\"type\":\"address\"}],\"name\":\"Damaged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trainer\",\"type\":\"address\"}],\"name\":\"Feed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trainer\",\"type\":\"address\"}],\"name\":\"Heal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trainer\",\"type\":\"address\"}],\"name\":\"Play\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trainer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"parent\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"childName\",\"type\":\"string\"}],\"name\":\"ProposeBreed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"parent\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"childName\",\"type\":\"string\"}],\"name\":\"ReceiveBreedProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trainer\",\"type\":\"address\"}],\"name\":\"Sleep\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trainer\",\"type\":\"address\"}],\"name\":\"UpgradeAttackCooldown\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trainer\",\"type\":\"address\"}],\"name\":\"UpgradeDamage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trainer\",\"type\":\"address\"}],\"name\":\"UpgradeHealing\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trainer\",\"type\":\"address\"}],\"name\":\"UpgradeMaxHealth\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract Dragon\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"attack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"attackCooldown\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Dragon\",\"name\":\"parent\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"childName\",\"type\":\"string\"}],\"name\":\"breed\",\"outputs\":[{\"internalType\":\"contract Egg\",\"name\":\"_egg\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"breedCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Dragon\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"breedProposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canAttack\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canBreed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canUpgrade\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clean\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"damage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"egg\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBoredom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHunger\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSleepiness\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUncleanliness\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"heal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"health\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"healthRegeneration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lair\",\"outputs\":[{\"internalType\":\"contract Lair\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxHealth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onAttack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"childName\",\"type\":\"string\"}],\"name\":\"onBreedProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"parents\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"play\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Dragon\",\"name\":\"parent\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"childName\",\"type\":\"string\"}],\"name\":\"proposeBreeding\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"secondsUntilAttack\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"secondsUntilBreed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"secondsUntilUpgrade\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sleep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"trust\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"upgradeAttackCooldown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"upgradeDamage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"upgradeHealing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"upgradeMaxHealth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Dragon.sol\":\"Dragon\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Dragon.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.6;\\n\\nimport \\\"./Lair.sol\\\";\\nimport \\\"./Egg.sol\\\";\\n\\ncontract Dragon {\\n\\n    uint constant UPGRADE_COOLDOWN = 1 hours;\\n    uint constant INIT_BREED_COOLDOWN = 12 hours;\\n    uint constant BREED_PROPOSAL_TIMEOUT = 7 days;\\n    uint constant UPGRADE_FACTOR = 0.01 ether; // 1%\\n    uint constant UPGRADE_COST = 5;\\n    uint constant HEAL_COST = 1;\\n    uint constant ATTACK_COST = 5; \\n    uint constant BREED_COST = 10;\\n    uint constant STATS_TIME_DECAY_DENOM = 5 minutes; // stats decay by 1% every 5 minutes\\n\\n    address public egg;\\n    Lair public lair;\\n    address[2] public parents;\\n    string public name;\\n    uint public breedCount;\\n    uint lastUpgradeTimestamp;\\n    uint lastAttackTimestamp;\\n    uint lastBreedTimestamp;\\n    uint lastPlayTimestamp;\\n    uint lastFeedTimestamp;\\n    uint lastCleanTimestamp;\\n    uint lastSleepTimestamp;\\n    uint public health = 1000000;\\n    uint public maxHealth = 1000000;\\n    uint public damage = 20000;\\n    uint public attackCooldown = 1 hours;\\n    uint public healthRegeneration = 2000;\\n    uint8 hunger;\\n    uint8 uncleanliness;\\n    uint8 boredom;\\n    uint8 sleepiness;\\n    mapping (address => uint) public trust;\\n    mapping (Dragon => mapping (string => uint)) public breedProposals;\\n\\n    constructor(address _egg, Lair _lair, address[2] memory _parents, string memory _name) {\\n        egg = _egg;\\n        lair = _lair;\\n        parents = _parents;\\n        name = _name;\\n        lastUpgradeTimestamp = block.timestamp;\\n        lastAttackTimestamp = block.timestamp;\\n        lastPlayTimestamp = block.timestamp;\\n        lastFeedTimestamp = block.timestamp;\\n        lastCleanTimestamp = block.timestamp;\\n        lastSleepTimestamp = block.timestamp;\\n        lastBreedTimestamp = block.timestamp;\\n    }\\n\\n    modifier IfAlive {\\n        if(\\n            getHunger() > 100 &&\\n            getUncleanliness() > 100 &&\\n            getBoredom() > 100 &&\\n            getSleepiness() > 100) {\\n                selfdestruct(payable(0)); // die\\n            }\\n        _;\\n    }\\n\\n    modifier earnsTrust {\\n        trust[msg.sender]++;\\n        _;\\n    } \\n\\n    modifier consumesTrust {\\n        trust[msg.sender] -= UPGRADE_COST;\\n        _;\\n    }\\n\\n    /*\\n        Healing\\n    */\\n\\n    function heal() public IfAlive {\\n        trust[msg.sender] -= HEAL_COST;\\n        health = min(health + healthRegeneration, maxHealth);\\n        emit Heal(msg.sender);\\n    }\\n\\n    /*\\n        Attack\\n    */\\n    function canAttack() public view returns (bool) {\\n        return block.timestamp > lastAttackTimestamp + attackCooldown;\\n    }\\n\\n    function secondsUntilAttack() public view returns (uint) {\\n        if(canAttack()) return 0;\\n        return block.timestamp - lastAttackTimestamp + attackCooldown;\\n    }\\n\\n    function attack(Dragon target) public IfAlive {\\n        require(canAttack(), \\\"i can only attack every so often\\\");\\n        require(target != this, \\\"i can't attack myself\\\");\\n        trust[msg.sender] -= ATTACK_COST;\\n        require(lair.isDragon(target), \\\"target is not a dragon\\\");\\n        require(isContract(address(target)), \\\"target dragon is dead\\\");\\n        if(target.health() <= damage) { // target will die\\n            maxHealth = target.maxHealth() / 4; // consume 1/4 maxHealth\\n            damage = target.damage() / 4; // consume 1/4 damage\\n        }\\n        lastAttackTimestamp = block.timestamp;\\n        target.onAttack();\\n        emit Attack(msg.sender, address(target));\\n    }\\n\\n    function onAttack() public {\\n        Dragon attacker = Dragon(msg.sender);\\n        require(lair.isDragon(attacker), \\\"attacker is not a dragon\\\");\\n        if(health <= attacker.damage()) {\\n            selfdestruct(payable(0)); // die\\n        }\\n        health -= attacker.damage();\\n        emit Damaged(msg.sender);\\n    }\\n\\n    /*\\n        Breeding\\n    */\\n\\n    function proposeBreeding(Dragon parent, string memory childName) public IfAlive {\\n        trust[msg.sender] -= BREED_COST; // proposals also have cost\\n        require(lair.isDragon(parent), \\\"parent is not a dragon\\\");\\n        require(isContract(address(parent)), \\\"parent dragon is dead\\\");\\n        require(parent != this, \\\"i can't breed with myself\\\");\\n        require(bytes(childName).length > 0, \\\"my child must have a name\\\");\\n        parent.onBreedProposal(childName);\\n        emit ProposeBreed(msg.sender, address(parent), childName);\\n    }\\n\\n    function onBreedProposal(string memory childName) public {\\n        Dragon parent = Dragon(msg.sender);\\n        require(lair.isDragon(parent), \\\"parent is not a dragon\\\");\\n        breedProposals[parent][childName] = block.timestamp;\\n        emit ReceiveBreedProposal(msg.sender, childName);\\n    }\\n\\n    function canBreed() public view returns (bool) {\\n        return block.timestamp > lastBreedTimestamp + (INIT_BREED_COOLDOWN * (2**(breedCount + 1)));\\n    }\\n\\n    function secondsUntilBreed() public view returns (uint) {\\n        if(canBreed()) return 0;\\n        return block.timestamp - lastBreedTimestamp + (INIT_BREED_COOLDOWN * (2**(breedCount + 1)));\\n    }\\n\\n    function breed(Dragon parent, string memory childName) public IfAlive returns (Egg _egg) {\\n        trust[msg.sender] -= BREED_COST; // proposals also have cost\\n        uint proposalTimestamp = breedProposals[parent][childName];\\n        require(proposalTimestamp > 0, \\\"breed proposal does not exist\\\");\\n        require(block.timestamp < proposalTimestamp + BREED_PROPOSAL_TIMEOUT, \\\"breed proposal expired\\\");\\n        require(canBreed(), \\\"I can't breed yet\\\");\\n        address[2] memory _parents = [address(this), address(parent)];\\n        _egg = lair.fileEggCertificate(_parents, childName);\\n        lastBreedTimestamp = block.timestamp;\\n        breedProposals[parent][childName] = 0;\\n        breedCount++;\\n        emit Breed(msg.sender, address(parent), address(_egg), childName);\\n    }\\n\\n    /*\\n        Upgrades\\n    */\\n\\n    function canUpgrade() public view returns (bool) {\\n        return block.timestamp > lastUpgradeTimestamp + UPGRADE_COOLDOWN;\\n    }\\n\\n    function secondsUntilUpgrade() public view returns (uint) {\\n        if(canUpgrade()) return 0;\\n        return block.timestamp - lastUpgradeTimestamp + UPGRADE_COOLDOWN;\\n    }\\n\\n    function upgradeMaxHealth() public consumesTrust IfAlive {\\n        require(canUpgrade(), \\\"i can only upgrade every so often\\\");\\n        uint extraMaxHealth = maxHealth * UPGRADE_FACTOR / 1 ether;\\n        maxHealth = maxHealth + extraMaxHealth;\\n        lastUpgradeTimestamp = block.timestamp;\\n        emit UpgradeMaxHealth(msg.sender);\\n    }\\n\\n    function upgradeHealing() public consumesTrust IfAlive {\\n        require(canUpgrade(), \\\"i can only upgrade every so often\\\");\\n        uint extraHealPoints = healthRegeneration * UPGRADE_FACTOR / 1 ether;\\n        healthRegeneration = healthRegeneration + extraHealPoints;\\n        lastUpgradeTimestamp = block.timestamp;\\n        emit UpgradeHealing(msg.sender);\\n    }\\n\\n    function upgradeDamage() public consumesTrust IfAlive {\\n        require(canUpgrade(), \\\"i can only upgrade every so often\\\");\\n        uint addedDamage = damage * UPGRADE_FACTOR / 1 ether;\\n        damage = damage + addedDamage;\\n        lastUpgradeTimestamp = block.timestamp;\\n        emit UpgradeDamage(msg.sender);\\n    }\\n\\n    function upgradeAttackCooldown() public consumesTrust IfAlive {\\n        require(canUpgrade(), \\\"i can only upgrade every so often\\\");\\n        uint removedAttackCooldown = attackCooldown * UPGRADE_FACTOR / 1 ether;\\n        attackCooldown = attackCooldown - removedAttackCooldown;\\n        lastUpgradeTimestamp = block.timestamp;\\n        emit UpgradeAttackCooldown(msg.sender);\\n    }\\n\\n    /*\\n        Caretaking\\n    */\\n\\n    function feed() public earnsTrust IfAlive {\\n        require(getHunger() > 5, \\\"i dont need to eat\\\");\\n        require(getBoredom() < 80, \\\"im too tired to eat\\\");\\n        require(getUncleanliness() < 80, \\\"im feeling too gross to eat\\\");\\n        lastFeedTimestamp = block.timestamp;\\n        \\n        hunger = 0;\\n        boredom += 10;\\n        uncleanliness += 3;\\n        emit Feed(msg.sender);\\n    }\\n\\n    function clean() public earnsTrust IfAlive {\\n        require(getUncleanliness() > 5, \\\"i dont need a bath\\\");\\n        lastCleanTimestamp = block.timestamp;\\n        \\n        uncleanliness = 0;\\n        emit Clean(msg.sender);\\n    }\\n\\n    function play() public earnsTrust IfAlive {\\n        require(getBoredom() > 5, \\\"i dont wanna play\\\");\\n        require(getHunger() < 80, \\\"im too hungry to play\\\");\\n        require(getSleepiness() < 80, \\\"im too sleepy to play\\\");\\n        require(getUncleanliness() < 80, \\\"im feeling too gross to play\\\");\\n        lastPlayTimestamp = block.timestamp;\\n        \\n        boredom = 0;\\n        hunger += 10;\\n        sleepiness += 10;\\n        uncleanliness += 5;\\n        emit Play(msg.sender);\\n    }\\n\\n    function sleep() public earnsTrust IfAlive {\\n        require(getSleepiness() > 5, \\\"im not feeling sleepy\\\");\\n        require(getUncleanliness() < 80, \\\"im feeling too gross to sleep\\\");\\n        \\n        lastSleepTimestamp = block.timestamp;\\n        \\n        sleepiness = 0;\\n        uncleanliness += 5;\\n        emit Sleep(msg.sender);\\n    }\\n\\n    function getHunger() public view returns (uint256) {\\n        return hunger + ((block.timestamp - lastFeedTimestamp) / STATS_TIME_DECAY_DENOM);\\n    }\\n    \\n    function getUncleanliness() public view returns (uint256) {\\n        return uncleanliness + ((block.timestamp - lastCleanTimestamp) / STATS_TIME_DECAY_DENOM);\\n    }\\n    \\n    function getBoredom() public view returns (uint256) {\\n        return boredom + ((block.timestamp - lastPlayTimestamp) / STATS_TIME_DECAY_DENOM);\\n    }\\n    \\n    function getSleepiness() public view returns (uint256) {\\n        return sleepiness + ((block.timestamp - lastSleepTimestamp) / STATS_TIME_DECAY_DENOM);\\n    }\\n\\n    /*\\n        Utils\\n    */\\n\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    function isContract(address account) internal view returns (bool) {\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    event Play(address indexed trainer);\\n    event Feed(address indexed trainer);\\n    event Sleep(address indexed trainer);\\n    event Clean(address indexed trainer);\\n    event Heal(address indexed trainer);\\n    event UpgradeDamage(address indexed trainer);\\n    event UpgradeAttackCooldown(address indexed trainer);\\n    event UpgradeMaxHealth(address indexed trainer);\\n    event UpgradeHealing(address indexed trainer);\\n    event Attack(address indexed trainer, address indexed target);\\n    event Damaged(address indexed attacker);\\n    event ProposeBreed(address indexed trainer, address indexed parent, string childName);\\n    event ReceiveBreedProposal(address indexed parent, string childName);\\n    event Breed(address indexed trainer, address indexed parent, address egg, string childName);\\n}\",\"keccak256\":\"0xb518747e87dc1d422fcb1e86340604602808fad01f9c3d62dcf04ac9b12036e9\",\"license\":\"UNLICENSED\"},\"contracts/Egg.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.6;\\n\\nimport \\\"./Lair.sol\\\";\\nimport \\\"./Dragon.sol\\\";\\n\\ncontract Egg {\\n\\n    string public name;\\n    uint constant BIRTH_DURATION = 24 hours;\\n    address[2] public parents;\\n    uint public creationTimestamp;\\n    bool public born;\\n    Lair public lair;\\n    uint tributes;\\n\\n    constructor(Lair _lair, address[2] memory _parents, string memory _name) {\\n        name = _name;\\n        parents = _parents;\\n        lair = _lair;\\n        creationTimestamp = block.timestamp;\\n    }\\n\\n    function isHatched() public view returns (bool) {\\n        return block.timestamp > creationTimestamp + BIRTH_DURATION - tributes;\\n    }\\n\\n    function secondsUntilHatched() public view returns (uint) {\\n        if(isHatched()) {\\n            return 0;\\n        }\\n\\n        return block.timestamp - creationTimestamp + BIRTH_DURATION - tributes;\\n    }\\n\\n    function getTributes() public view returns (uint) {\\n        return tributes / 100;\\n    }\\n\\n    function giveTribute() public {\\n        require(!isHatched(), \\\"im already hatched\\\");\\n        if(tributes + 100 <= BIRTH_DURATION) {\\n            tributes += 100;\\n            emit Tribute(msg.sender);\\n        }\\n    }\\n\\n    function giveBirth() public returns (Dragon dragon) {\\n        if(!born && isHatched()) {\\n            dragon = lair.fileDragonCertificate(parents, name);\\n            born = true;\\n            emit Birth(msg.sender);\\n        }\\n    }\\n\\n    event Tribute(address indexed trainer);\\n    event Birth(address indexed trainer);\\n\\n\\n}\",\"keccak256\":\"0x57934f3878e6a9f99857679ca2d78366b34c456a1a094aae211ac4e049c0423c\",\"license\":\"UNLICENSED\"},\"contracts/Lair.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.6;\\n\\nimport \\\"./Dragon.sol\\\";\\nimport \\\"./Egg.sol\\\";\\n\\ncontract Lair {\\n\\n    Dragon[] dragons;\\n    mapping (Dragon => bool) public isDragon;\\n\\n    Egg[] eggs;\\n    mapping (Egg => bool) public isEgg;\\n\\n    constructor() {\\n        address[2] memory parents = [address(0), address(0)];\\n        Dragon leshner = new Dragon(address(0), this, parents, \\\"Leshner\\\");\\n        dragons.push(leshner);\\n        isDragon[leshner] = true;\\n        emit DragonBirth(address(leshner), parents[0], parents[1]);\\n        Dragon pleasr = new Dragon(address(0), this, parents, \\\"Pleasr\\\");\\n        dragons.push(pleasr);\\n        isDragon[pleasr] = true;\\n        emit DragonBirth(address(pleasr), parents[0], parents[1]);\\n    }\\n\\n    function fileDragonCertificate(address[2] memory parents, string memory name) external returns (Dragon dragon) {\\n        require(isEgg[Egg(msg.sender)]);\\n        dragon = new Dragon(msg.sender, this, parents, name);\\n        dragons.push(dragon);\\n        isDragon[dragon] = true;\\n        emit DragonBirth(address(dragon), parents[0], parents[1]);\\n    }\\n\\n    function fileEggCertificate(address[2] memory parents, string memory name) external returns (Egg egg)  {\\n        require(isDragon[Dragon(msg.sender)]);\\n        egg = new Egg(this, parents, name);\\n        eggs.push(egg);\\n        isEgg[egg] = true;\\n        emit EggBirth(address(egg), parents[0], parents[1]);\\n    }\\n\\n    function allDragons() public view returns (Dragon[] memory) {\\n        return dragons;\\n    }\\n\\n    function allEggs() public view returns (Egg[] memory) {\\n        return eggs;\\n    }\\n\\n    event DragonBirth(address indexed dragon, address indexed parent1, address indexed parent2);\\n    event EggBirth(address indexed egg, address indexed parent1, address indexed parent2);\\n}\",\"keccak256\":\"0xac617d756490aad077d009d1840dbd5b130d533819d2daa644a1c817cd79bb9a\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x6080604052620f4240600d55620f4240600e55614e20600f55610e106010556107d06011553480156200003157600080fd5b50604051620028fe380380620028fe83398101604081905262000054916200025c565b600080546001600160a01b038087166001600160a01b03199283161790925560018054928616929091169190911790556200009260028381620000d6565b508051620000a890600490602084019062000133565b505042600681905560078190556009819055600a819055600b819055600c81905560085550620003f8915050565b826002810192821562000121579160200282015b828111156200012157825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620000ea565b506200012f929150620001b0565b5090565b82805462000141906200038c565b90600052602060002090601f01602090048101928262000165576000855562000121565b82601f106200018057805160ff191683800117855562000121565b8280016001018555821562000121579182015b828111156200012157825182559160200191906001019062000193565b5b808211156200012f5760008155600101620001b1565b600082601f830112620001d957600080fd5b81516001600160401b03811115620001f557620001f5620003c9565b60206200020b601f8301601f1916820162000359565b82815285828487010111156200022057600080fd5b60005b838110156200024057858101830151828201840152820162000223565b83811115620002525760008385840101525b5095945050505050565b60008060008060a085870312156200027357600080fd5b84516200028081620003df565b809450506020808601516200029581620003df565b9350605f86018713620002a757600080fd5b620002b16200032e565b8060408801608089018a811115620002c857600080fd5b60005b6002811015620002f5578251620002e281620003df565b85529385019391850191600101620002cb565b505191955090925050506001600160401b038111156200031457600080fd5b6200032287828801620001c7565b91505092959194509250565b604080519081016001600160401b0381118282101715620003535762000353620003c9565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620003845762000384620003c9565b604052919050565b600181811c90821680620003a157607f821691505b60208210811415620003c357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114620003f557600080fd5b50565b6124f680620004086000396000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c8063898572a611610125578063c06abfc7116100ad578063d018db3e1161007c578063d018db3e146103f9578063e608eb1f1461040c578063e73961f514610415578063f19d55051461041e578063fc4333cd1461042657600080fd5b8063c06abfc71461039a578063c6340786146103ad578063ccd30b5e146103e9578063cdf55f8b146103f157600080fd5b8063a104a64f116100f4578063a104a64f14610366578063a1580f1a1461036e578063a1e5725314610377578063a22ae22d1461037f578063aa1e34091461039257600080fd5b8063898572a61461033a57806391cbd0011461034d57806393e84cd9146103565780639738968c1461035e57600080fd5b806337a7b7d8116101a857806354b2fba71161017757806354b2fba7146103055780636599c9e01461030e5780637633a22c1461032157806378d245281461032a57806388e1cad51461033257600080fd5b806337a7b7d8146102cd57806344d8d5ff146102d55780634637d827146102dd5780634fccdfcd146102fd57600080fd5b8063133a473e116101ef578063133a473e14610277578063200dfb1b1461027f57806326d71ad7146102aa5780632e4dab29146102b257806333e1c1b3146102c557600080fd5b80630434fe0b1461022157806306fdde031461022b5780630d3b3b5c146102495780630d9341f21461025f575b600080fd5b61022961042e565b005b6102336104eb565b6040516102409190612222565b60405180910390f35b610251610579565b604051908152602001610240565b6102676105b2565b6040519015158152602001610240565b6102296105ee565b600154610292906001600160a01b031681565b6040516001600160a01b039091168152602001610240565b610251610782565b6102926102c0366004612095565b6107d3565b610229610aaa565b610229610bb0565b610251610dbc565b6102516102eb36600461204f565b60136020526000908152604090205481565b610251610de2565b610251600e5481565b61022961031c366004612095565b610e0f565b610251600d5481565b6102516110e0565b610229611105565b61029261034836600461213f565b61120b565b61025160115481565b61022961122b565b6102676114bc565b6102516114ce565b610251600f5481565b610229611500565b61022961038d366004612102565b611606565b61022961173f565b600054610292906001600160a01b031681565b6102516103bb366004612095565b6014602090815260009283526040909220815180830184018051928152908401929093019190912091525481565b610229611939565b610267611a3f565b61022961040736600461204f565b611a51565b61025160055481565b61025160105481565b610251611e80565b610229611eb3565b6064610438610de2565b11801561044c5750606461044a6114ce565b115b801561045f5750606461045d611e80565b115b801561047257506064610470610579565b115b1561047b576000ff5b33600090815260136020526040812080546001929061049b9084906123df565b9091555050601154600d546104bb916104b391612276565b600e54611fa8565b600d5560405133907fff9eb7a48a8603f92a1e9a4812604a575e69a2998e329bec8931566ae6435db990600090a2565b600480546104f890612426565b80601f016020809104026020016040519081016040528092919081815260200182805461052490612426565b80156105715780601f1061054657610100808354040283529160200191610571565b820191906000526020600020905b81548152906001019060200180831161055457829003601f168201915b505050505081565b600061012c600c544261058c91906123df565b61059691906122b3565b6012546105ad91906301000000900460ff16612276565b905090565b600060055460016105c39190612276565b6105ce906002612318565b6105da9061a8c06123c0565b6008546105e79190612276565b4211905090565b33600090815260136020526040812080549161060983612461565b91905055506064610618610de2565b11801561062c5750606461062a6114ce565b115b801561063f5750606461063d611e80565b115b801561065257506064610650610579565b115b1561065b576000ff5b6005610665610579565b116106af5760405162461bcd60e51b8152602060048201526015602482015274696d206e6f74206665656c696e6720736c6565707960581b60448201526064015b60405180910390fd5b60506106b96114ce565b106107065760405162461bcd60e51b815260206004820152601d60248201527f696d206665656c696e6720746f6f2067726f737320746f20736c65657000000060448201526064016106a6565b42600c556012805463ff000000191680825560059190600190610732908490610100900460ff1661228e565b92506101000a81548160ff021916908360ff160217905550336001600160a01b03167f331806c31f242e16e4ff517579b617cc23af9c93f9f014242c5a75a156ff1d1e60405160405180910390a2565b600061078c6105b2565b156107975750600090565b6005546107a5906001612276565b6107b0906002612318565b6107bc9061a8c06123c0565b6008546107c990426123df565b6105ad9190612276565b600060646107df610de2565b1180156107f3575060646107f16114ce565b115b801561080657506064610804611e80565b115b801561081957506064610817610579565b115b15610822576000ff5b3360009081526013602052604081208054600a92906108429084906123df565b90915550506001600160a01b038316600090815260146020526040808220905161086d90859061219d565b9081526020016040518091039020549050600081116108ce5760405162461bcd60e51b815260206004820152601d60248201527f62726565642070726f706f73616c20646f6573206e6f7420657869737400000060448201526064016106a6565b6108db62093a8082612276565b42106109225760405162461bcd60e51b8152602060048201526016602482015275189c995959081c1c9bdc1bdcd85b08195e1c1a5c995960521b60448201526064016106a6565b61092a6105b2565b61096a5760405162461bcd60e51b8152602060048201526011602482015270124818d85b89dd08189c995959081e595d607a1b60448201526064016106a6565b6040805180820182523081526001600160a01b038681166020830152600154925163e7d7ec4560e01b81529192169063e7d7ec45906109af90849088906004016121dd565b602060405180830381600087803b1580156109c957600080fd5b505af11580156109dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0191906120e5565b426008556001600160a01b03861660009081526014602052604080822090519295509091610a3090879061219d565b9081526040519081900360200190205560058054906000610a5083612461565b9190505550846001600160a01b0316336001600160a01b03167f28de2430f3295bcd73f9e551fbdc7db150aa9ee339527aa15a3036d81ce295558587604051610a9a9291906121b9565b60405180910390a3505092915050565b336000908152601360205260408120805460059290610aca9084906123df565b9091555060649050610ada610de2565b118015610aee57506064610aec6114ce565b115b8015610b0157506064610aff611e80565b115b8015610b1457506064610b12610579565b115b15610b1d576000ff5b610b256114bc565b610b415760405162461bcd60e51b81526004016106a690612235565b6000670de0b6b3a7640000662386f26fc10000601054610b6191906123c0565b610b6b91906122b3565b905080601054610b7b91906123df565b6010554260065560405133907f90cf1b01ab6e7af5b60e709721d8d77d70eaabec242ce78bb71f2cd0114aa4c990600090a250565b336000908152601360205260408120805491610bcb83612461565b91905055506064610bda610de2565b118015610bee57506064610bec6114ce565b115b8015610c0157506064610bff611e80565b115b8015610c1457506064610c12610579565b115b15610c1d576000ff5b6005610c27610de2565b11610c695760405162461bcd60e51b81526020600482015260126024820152711a48191bdb9d081b995959081d1bc819585d60721b60448201526064016106a6565b6050610c73611e80565b10610cb65760405162461bcd60e51b81526020600482015260136024820152721a5b481d1bdbc81d1a5c9959081d1bc819585d606a1b60448201526064016106a6565b6050610cc06114ce565b10610d0d5760405162461bcd60e51b815260206004820152601b60248201527f696d206665656c696e6720746f6f2067726f737320746f20656174000000000060448201526064016106a6565b42600a9081556012805460ff1916808255600290610d3590849062010000900460ff1661228e565b92506101000a81548160ff021916908360ff1602179055506003601260018282829054906101000a900460ff16610d6c919061228e565b92506101000a81548160ff021916908360ff160217905550336001600160a01b03167f28d993421cf9d4698b7dc17b77350fef06f1e38b590292cd54364f132f4eddd160405160405180910390a2565b6000610dc66114bc565b15610dd15750600090565b610e10600654426107c991906123df565b600061012c600a5442610df591906123df565b610dff91906122b3565b6012546105ad919060ff16612276565b6064610e19610de2565b118015610e2d57506064610e2b6114ce565b115b8015610e4057506064610e3e611e80565b115b8015610e5357506064610e51610579565b115b15610e5c576000ff5b3360009081526013602052604081208054600a9290610e7c9084906123df565b909155505060015460405163ecb421f160e01b81526001600160a01b0384811660048301529091169063ecb421f19060240160206040518083038186803b158015610ec657600080fd5b505afa158015610eda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efe9190612073565b610f435760405162461bcd60e51b81526020600482015260166024820152753830b932b73a1034b9903737ba103090323930b3b7b760511b60448201526064016106a6565b813b610f895760405162461bcd60e51b81526020600482015260156024820152741c185c995b9d08191c9859dbdb881a5cc819195859605a1b60448201526064016106a6565b6001600160a01b038216301415610fe25760405162461bcd60e51b815260206004820152601960248201527f692063616e27742062726565642077697468206d7973656c660000000000000060448201526064016106a6565b60008151116110335760405162461bcd60e51b815260206004820152601960248201527f6d79206368696c64206d75737420686176652061206e616d650000000000000060448201526064016106a6565b60405163a22ae22d60e01b81526001600160a01b0383169063a22ae22d9061105f908490600401612222565b600060405180830381600087803b15801561107957600080fd5b505af115801561108d573d6000803e3d6000fd5b50505050816001600160a01b0316336001600160a01b03167fa8d2e33455633dd30964014895ce928ba8db50c3516b65edf29cb8e6e8986d99836040516110d49190612222565b60405180910390a35050565b60006110ea611a3f565b156110f55750600090565b6010546007546107c990426123df565b3360009081526013602052604081208054600592906111259084906123df565b9091555060649050611135610de2565b118015611149575060646111476114ce565b115b801561115c5750606461115a611e80565b115b801561116f5750606461116d610579565b115b15611178576000ff5b6111806114bc565b61119c5760405162461bcd60e51b81526004016106a690612235565b6000670de0b6b3a7640000662386f26fc10000600e546111bc91906123c0565b6111c691906122b3565b905080600e546111d69190612276565b600e554260065560405133907f91d3e258daf82fb8b7ea577075218d281413467ff849d8ae027c3f4e2dda788a90600090a250565b6002816002811061121b57600080fd5b01546001600160a01b0316905081565b33600090815260136020526040812080549161124683612461565b91905055506064611255610de2565b118015611269575060646112676114ce565b115b801561127c5750606461127a611e80565b115b801561128f5750606461128d610579565b115b15611298576000ff5b60056112a2611e80565b116112e35760405162461bcd60e51b81526020600482015260116024820152706920646f6e742077616e6e6120706c617960781b60448201526064016106a6565b60506112ed610de2565b106113325760405162461bcd60e51b8152602060048201526015602482015274696d20746f6f2068756e67727920746f20706c617960581b60448201526064016106a6565b605061133c610579565b106113815760405162461bcd60e51b8152602060048201526015602482015274696d20746f6f20736c6565707920746f20706c617960581b60448201526064016106a6565b605061138b6114ce565b106113d85760405162461bcd60e51b815260206004820152601c60248201527f696d206665656c696e6720746f6f2067726f737320746f20706c61790000000060448201526064016106a6565b426009556012805462ff00001981168255600a91906000906113fe90849060ff1661228e565b92506101000a81548160ff021916908360ff160217905550600a601260038282829054906101000a900460ff16611435919061228e565b92506101000a81548160ff021916908360ff1602179055506005601260018282829054906101000a900460ff1661146c919061228e565b92506101000a81548160ff021916908360ff160217905550336001600160a01b03167f74ff4718bf0d5b38ef942dd8fd82b6a7af50cb06df94b380e3bd953df8e34a3c60405160405180910390a2565b6000610e106006546105e79190612276565b600061012c600b54426114e191906123df565b6114eb91906122b3565b6012546105ad9190610100900460ff16612276565b3360009081526013602052604081208054600592906115209084906123df565b9091555060649050611530610de2565b118015611544575060646115426114ce565b115b801561155757506064611555611e80565b115b801561156a57506064611568610579565b115b15611573576000ff5b61157b6114bc565b6115975760405162461bcd60e51b81526004016106a690612235565b6000670de0b6b3a7640000662386f26fc100006011546115b791906123c0565b6115c191906122b3565b9050806011546115d19190612276565b6011554260065560405133907f5d39218f66077cf924e6e21bf9c7621acdec797b73228faad359024d6de0892890600090a250565b60015460405163ecb421f160e01b81523360048201819052916001600160a01b03169063ecb421f19060240160206040518083038186803b15801561164a57600080fd5b505afa15801561165e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116829190612073565b6116c75760405162461bcd60e51b81526020600482015260166024820152753830b932b73a1034b9903737ba103090323930b3b7b760511b60448201526064016106a6565b6001600160a01b0381166000908152601460205260409081902090514291906116f190859061219d565b9081526040519081900360200181209190915533907f8678ef097705f3f09f26086b9bdd0074d74b8060bd148f282a126eb50e6cb7b890611733908590612222565b60405180910390a25050565b60015460405163ecb421f160e01b81523360048201819052916001600160a01b03169063ecb421f19060240160206040518083038186803b15801561178357600080fd5b505afa158015611797573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117bb9190612073565b6118075760405162461bcd60e51b815260206004820152601860248201527f61747461636b6572206973206e6f74206120647261676f6e000000000000000060448201526064016106a6565b806001600160a01b031663a1580f1a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561184057600080fd5b505afa158015611854573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118789190612158565b600d5411611884576000ff5b806001600160a01b031663a1580f1a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156118bd57600080fd5b505afa1580156118d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118f59190612158565b600d600082825461190691906123df565b909155505060405133907f15aa33b5a3ee1603c1ded248b215cd76f29aafb7cc6aba5506d6b7550401fff090600090a250565b3360009081526013602052604081208054600592906119599084906123df565b9091555060649050611969610de2565b11801561197d5750606461197b6114ce565b115b80156119905750606461198e611e80565b115b80156119a3575060646119a1610579565b115b156119ac576000ff5b6119b46114bc565b6119d05760405162461bcd60e51b81526004016106a690612235565b6000670de0b6b3a7640000662386f26fc10000600f546119f091906123c0565b6119fa91906122b3565b905080600f54611a0a9190612276565b600f554260065560405133907fb9c0fb19e07b55ab895ef7d26d8ebeb354c7d9a6c326c1f280f5747addf280be90600090a250565b60006010546007546105e79190612276565b6064611a5b610de2565b118015611a6f57506064611a6d6114ce565b115b8015611a8257506064611a80611e80565b115b8015611a9557506064611a93610579565b115b15611a9e576000ff5b611aa6611a3f565b611af25760405162461bcd60e51b815260206004820181905260248201527f692063616e206f6e6c792061747461636b20657665727920736f206f6674656e60448201526064016106a6565b6001600160a01b038116301415611b435760405162461bcd60e51b8152602060048201526015602482015274349031b0b713ba1030ba3a30b1b59036bcb9b2b63360591b60448201526064016106a6565b336000908152601360205260408120805460059290611b639084906123df565b909155505060015460405163ecb421f160e01b81526001600160a01b0383811660048301529091169063ecb421f19060240160206040518083038186803b158015611bad57600080fd5b505afa158015611bc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611be59190612073565b611c2a5760405162461bcd60e51b81526020600482015260166024820152753a30b933b2ba1034b9903737ba103090323930b3b7b760511b60448201526064016106a6565b803b611c705760405162461bcd60e51b81526020600482015260156024820152741d185c99d95d08191c9859dbdb881a5cc819195859605a1b60448201526064016106a6565b600f54816001600160a01b0316637633a22c6040518163ffffffff1660e01b815260040160206040518083038186803b158015611cac57600080fd5b505afa158015611cc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ce49190612158565b11611ded576004816001600160a01b03166354b2fba76040518163ffffffff1660e01b815260040160206040518083038186803b158015611d2457600080fd5b505afa158015611d38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d5c9190612158565b611d6691906122b3565b600e819055506004816001600160a01b031663a1580f1a6040518163ffffffff1660e01b815260040160206040518083038186803b158015611da757600080fd5b505afa158015611dbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ddf9190612158565b611de991906122b3565b600f555b42600781905550806001600160a01b031663aa1e34096040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611e2f57600080fd5b505af1158015611e43573d6000803e3d6000fd5b50506040516001600160a01b03841692503391507f93a24e91f44890f6ead6f4f95caebbda5c7039be4277148123db9b4d2b293c9090600090a350565b600061012c60095442611e9391906123df565b611e9d91906122b3565b6012546105ad919062010000900460ff16612276565b336000908152601360205260408120805491611ece83612461565b91905055506064611edd610de2565b118015611ef157506064611eef6114ce565b115b8015611f0457506064611f02611e80565b115b8015611f1757506064611f15610579565b115b15611f20576000ff5b6005611f2a6114ce565b11611f6c5760405162461bcd60e51b81526020600482015260126024820152710d240c8dedce840dccacac840c240c4c2e8d60731b60448201526064016106a6565b42600b556012805461ff001916905560405133907f8cf0d2ab060cb4196e6b7e16c5c2f9f64b3e488ecd7b83c76bd16667b4077af090600090a2565b6000818310611fb75781611fb9565b825b90505b92915050565b600082601f830112611fd357600080fd5b813567ffffffffffffffff80821115611fee57611fee612492565b604051601f8301601f19908116603f0116810190828211818310171561201657612016612492565b8160405283815286602085880101111561202f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561206157600080fd5b813561206c816124a8565b9392505050565b60006020828403121561208557600080fd5b8151801515811461206c57600080fd5b600080604083850312156120a857600080fd5b82356120b3816124a8565b9150602083013567ffffffffffffffff8111156120cf57600080fd5b6120db85828601611fc2565b9150509250929050565b6000602082840312156120f757600080fd5b815161206c816124a8565b60006020828403121561211457600080fd5b813567ffffffffffffffff81111561212b57600080fd5b61213784828501611fc2565b949350505050565b60006020828403121561215157600080fd5b5035919050565b60006020828403121561216a57600080fd5b5051919050565b600081518084526121898160208601602086016123f6565b601f01601f19169290920160200192915050565b600082516121af8184602087016123f6565b9190910192915050565b6001600160a01b038316815260406020820181905260009061213790830184612171565b60008184825b600281101561220b5781516001600160a01b03168352602092830192909101906001016121e3565b505050606060408301526121376060830184612171565b602081526000611fb96020830184612171565b60208082526021908201527f692063616e206f6e6c79207570677261646520657665727920736f206f6674656040820152603760f91b606082015260800190565b600082198211156122895761228961247c565b500190565b600060ff821660ff84168060ff038211156122ab576122ab61247c565b019392505050565b6000826122d057634e487b7160e01b600052601260045260246000fd5b500490565b600181815b808511156123105781600019048211156122f6576122f661247c565b8085161561230357918102915b93841c93908002906122da565b509250929050565b6000611fb9838360008261232e57506001611fbc565b8161233b57506000611fbc565b8160018114612351576002811461235b57612377565b6001915050611fbc565b60ff84111561236c5761236c61247c565b50506001821b611fbc565b5060208310610133831016604e8410600b841016171561239a575081810a611fbc565b6123a483836122d5565b80600019048211156123b8576123b861247c565b029392505050565b60008160001904831182151516156123da576123da61247c565b500290565b6000828210156123f1576123f161247c565b500390565b60005b838110156124115781810151838201526020016123f9565b83811115612420576000848401525b50505050565b600181811c9082168061243a57607f821691505b6020821081141561245b57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156124755761247561247c565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146124bd57600080fd5b5056fea2646970667358221220092ab6c5799b92d1e40574c14183192e5ab3ae4aeff95d7b5849e589ea62a89864736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061021c5760003560e01c8063898572a611610125578063c06abfc7116100ad578063d018db3e1161007c578063d018db3e146103f9578063e608eb1f1461040c578063e73961f514610415578063f19d55051461041e578063fc4333cd1461042657600080fd5b8063c06abfc71461039a578063c6340786146103ad578063ccd30b5e146103e9578063cdf55f8b146103f157600080fd5b8063a104a64f116100f4578063a104a64f14610366578063a1580f1a1461036e578063a1e5725314610377578063a22ae22d1461037f578063aa1e34091461039257600080fd5b8063898572a61461033a57806391cbd0011461034d57806393e84cd9146103565780639738968c1461035e57600080fd5b806337a7b7d8116101a857806354b2fba71161017757806354b2fba7146103055780636599c9e01461030e5780637633a22c1461032157806378d245281461032a57806388e1cad51461033257600080fd5b806337a7b7d8146102cd57806344d8d5ff146102d55780634637d827146102dd5780634fccdfcd146102fd57600080fd5b8063133a473e116101ef578063133a473e14610277578063200dfb1b1461027f57806326d71ad7146102aa5780632e4dab29146102b257806333e1c1b3146102c557600080fd5b80630434fe0b1461022157806306fdde031461022b5780630d3b3b5c146102495780630d9341f21461025f575b600080fd5b61022961042e565b005b6102336104eb565b6040516102409190612222565b60405180910390f35b610251610579565b604051908152602001610240565b6102676105b2565b6040519015158152602001610240565b6102296105ee565b600154610292906001600160a01b031681565b6040516001600160a01b039091168152602001610240565b610251610782565b6102926102c0366004612095565b6107d3565b610229610aaa565b610229610bb0565b610251610dbc565b6102516102eb36600461204f565b60136020526000908152604090205481565b610251610de2565b610251600e5481565b61022961031c366004612095565b610e0f565b610251600d5481565b6102516110e0565b610229611105565b61029261034836600461213f565b61120b565b61025160115481565b61022961122b565b6102676114bc565b6102516114ce565b610251600f5481565b610229611500565b61022961038d366004612102565b611606565b61022961173f565b600054610292906001600160a01b031681565b6102516103bb366004612095565b6014602090815260009283526040909220815180830184018051928152908401929093019190912091525481565b610229611939565b610267611a3f565b61022961040736600461204f565b611a51565b61025160055481565b61025160105481565b610251611e80565b610229611eb3565b6064610438610de2565b11801561044c5750606461044a6114ce565b115b801561045f5750606461045d611e80565b115b801561047257506064610470610579565b115b1561047b576000ff5b33600090815260136020526040812080546001929061049b9084906123df565b9091555050601154600d546104bb916104b391612276565b600e54611fa8565b600d5560405133907fff9eb7a48a8603f92a1e9a4812604a575e69a2998e329bec8931566ae6435db990600090a2565b600480546104f890612426565b80601f016020809104026020016040519081016040528092919081815260200182805461052490612426565b80156105715780601f1061054657610100808354040283529160200191610571565b820191906000526020600020905b81548152906001019060200180831161055457829003601f168201915b505050505081565b600061012c600c544261058c91906123df565b61059691906122b3565b6012546105ad91906301000000900460ff16612276565b905090565b600060055460016105c39190612276565b6105ce906002612318565b6105da9061a8c06123c0565b6008546105e79190612276565b4211905090565b33600090815260136020526040812080549161060983612461565b91905055506064610618610de2565b11801561062c5750606461062a6114ce565b115b801561063f5750606461063d611e80565b115b801561065257506064610650610579565b115b1561065b576000ff5b6005610665610579565b116106af5760405162461bcd60e51b8152602060048201526015602482015274696d206e6f74206665656c696e6720736c6565707960581b60448201526064015b60405180910390fd5b60506106b96114ce565b106107065760405162461bcd60e51b815260206004820152601d60248201527f696d206665656c696e6720746f6f2067726f737320746f20736c65657000000060448201526064016106a6565b42600c556012805463ff000000191680825560059190600190610732908490610100900460ff1661228e565b92506101000a81548160ff021916908360ff160217905550336001600160a01b03167f331806c31f242e16e4ff517579b617cc23af9c93f9f014242c5a75a156ff1d1e60405160405180910390a2565b600061078c6105b2565b156107975750600090565b6005546107a5906001612276565b6107b0906002612318565b6107bc9061a8c06123c0565b6008546107c990426123df565b6105ad9190612276565b600060646107df610de2565b1180156107f3575060646107f16114ce565b115b801561080657506064610804611e80565b115b801561081957506064610817610579565b115b15610822576000ff5b3360009081526013602052604081208054600a92906108429084906123df565b90915550506001600160a01b038316600090815260146020526040808220905161086d90859061219d565b9081526020016040518091039020549050600081116108ce5760405162461bcd60e51b815260206004820152601d60248201527f62726565642070726f706f73616c20646f6573206e6f7420657869737400000060448201526064016106a6565b6108db62093a8082612276565b42106109225760405162461bcd60e51b8152602060048201526016602482015275189c995959081c1c9bdc1bdcd85b08195e1c1a5c995960521b60448201526064016106a6565b61092a6105b2565b61096a5760405162461bcd60e51b8152602060048201526011602482015270124818d85b89dd08189c995959081e595d607a1b60448201526064016106a6565b6040805180820182523081526001600160a01b038681166020830152600154925163e7d7ec4560e01b81529192169063e7d7ec45906109af90849088906004016121dd565b602060405180830381600087803b1580156109c957600080fd5b505af11580156109dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0191906120e5565b426008556001600160a01b03861660009081526014602052604080822090519295509091610a3090879061219d565b9081526040519081900360200190205560058054906000610a5083612461565b9190505550846001600160a01b0316336001600160a01b03167f28de2430f3295bcd73f9e551fbdc7db150aa9ee339527aa15a3036d81ce295558587604051610a9a9291906121b9565b60405180910390a3505092915050565b336000908152601360205260408120805460059290610aca9084906123df565b9091555060649050610ada610de2565b118015610aee57506064610aec6114ce565b115b8015610b0157506064610aff611e80565b115b8015610b1457506064610b12610579565b115b15610b1d576000ff5b610b256114bc565b610b415760405162461bcd60e51b81526004016106a690612235565b6000670de0b6b3a7640000662386f26fc10000601054610b6191906123c0565b610b6b91906122b3565b905080601054610b7b91906123df565b6010554260065560405133907f90cf1b01ab6e7af5b60e709721d8d77d70eaabec242ce78bb71f2cd0114aa4c990600090a250565b336000908152601360205260408120805491610bcb83612461565b91905055506064610bda610de2565b118015610bee57506064610bec6114ce565b115b8015610c0157506064610bff611e80565b115b8015610c1457506064610c12610579565b115b15610c1d576000ff5b6005610c27610de2565b11610c695760405162461bcd60e51b81526020600482015260126024820152711a48191bdb9d081b995959081d1bc819585d60721b60448201526064016106a6565b6050610c73611e80565b10610cb65760405162461bcd60e51b81526020600482015260136024820152721a5b481d1bdbc81d1a5c9959081d1bc819585d606a1b60448201526064016106a6565b6050610cc06114ce565b10610d0d5760405162461bcd60e51b815260206004820152601b60248201527f696d206665656c696e6720746f6f2067726f737320746f20656174000000000060448201526064016106a6565b42600a9081556012805460ff1916808255600290610d3590849062010000900460ff1661228e565b92506101000a81548160ff021916908360ff1602179055506003601260018282829054906101000a900460ff16610d6c919061228e565b92506101000a81548160ff021916908360ff160217905550336001600160a01b03167f28d993421cf9d4698b7dc17b77350fef06f1e38b590292cd54364f132f4eddd160405160405180910390a2565b6000610dc66114bc565b15610dd15750600090565b610e10600654426107c991906123df565b600061012c600a5442610df591906123df565b610dff91906122b3565b6012546105ad919060ff16612276565b6064610e19610de2565b118015610e2d57506064610e2b6114ce565b115b8015610e4057506064610e3e611e80565b115b8015610e5357506064610e51610579565b115b15610e5c576000ff5b3360009081526013602052604081208054600a9290610e7c9084906123df565b909155505060015460405163ecb421f160e01b81526001600160a01b0384811660048301529091169063ecb421f19060240160206040518083038186803b158015610ec657600080fd5b505afa158015610eda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efe9190612073565b610f435760405162461bcd60e51b81526020600482015260166024820152753830b932b73a1034b9903737ba103090323930b3b7b760511b60448201526064016106a6565b813b610f895760405162461bcd60e51b81526020600482015260156024820152741c185c995b9d08191c9859dbdb881a5cc819195859605a1b60448201526064016106a6565b6001600160a01b038216301415610fe25760405162461bcd60e51b815260206004820152601960248201527f692063616e27742062726565642077697468206d7973656c660000000000000060448201526064016106a6565b60008151116110335760405162461bcd60e51b815260206004820152601960248201527f6d79206368696c64206d75737420686176652061206e616d650000000000000060448201526064016106a6565b60405163a22ae22d60e01b81526001600160a01b0383169063a22ae22d9061105f908490600401612222565b600060405180830381600087803b15801561107957600080fd5b505af115801561108d573d6000803e3d6000fd5b50505050816001600160a01b0316336001600160a01b03167fa8d2e33455633dd30964014895ce928ba8db50c3516b65edf29cb8e6e8986d99836040516110d49190612222565b60405180910390a35050565b60006110ea611a3f565b156110f55750600090565b6010546007546107c990426123df565b3360009081526013602052604081208054600592906111259084906123df565b9091555060649050611135610de2565b118015611149575060646111476114ce565b115b801561115c5750606461115a611e80565b115b801561116f5750606461116d610579565b115b15611178576000ff5b6111806114bc565b61119c5760405162461bcd60e51b81526004016106a690612235565b6000670de0b6b3a7640000662386f26fc10000600e546111bc91906123c0565b6111c691906122b3565b905080600e546111d69190612276565b600e554260065560405133907f91d3e258daf82fb8b7ea577075218d281413467ff849d8ae027c3f4e2dda788a90600090a250565b6002816002811061121b57600080fd5b01546001600160a01b0316905081565b33600090815260136020526040812080549161124683612461565b91905055506064611255610de2565b118015611269575060646112676114ce565b115b801561127c5750606461127a611e80565b115b801561128f5750606461128d610579565b115b15611298576000ff5b60056112a2611e80565b116112e35760405162461bcd60e51b81526020600482015260116024820152706920646f6e742077616e6e6120706c617960781b60448201526064016106a6565b60506112ed610de2565b106113325760405162461bcd60e51b8152602060048201526015602482015274696d20746f6f2068756e67727920746f20706c617960581b60448201526064016106a6565b605061133c610579565b106113815760405162461bcd60e51b8152602060048201526015602482015274696d20746f6f20736c6565707920746f20706c617960581b60448201526064016106a6565b605061138b6114ce565b106113d85760405162461bcd60e51b815260206004820152601c60248201527f696d206665656c696e6720746f6f2067726f737320746f20706c61790000000060448201526064016106a6565b426009556012805462ff00001981168255600a91906000906113fe90849060ff1661228e565b92506101000a81548160ff021916908360ff160217905550600a601260038282829054906101000a900460ff16611435919061228e565b92506101000a81548160ff021916908360ff1602179055506005601260018282829054906101000a900460ff1661146c919061228e565b92506101000a81548160ff021916908360ff160217905550336001600160a01b03167f74ff4718bf0d5b38ef942dd8fd82b6a7af50cb06df94b380e3bd953df8e34a3c60405160405180910390a2565b6000610e106006546105e79190612276565b600061012c600b54426114e191906123df565b6114eb91906122b3565b6012546105ad9190610100900460ff16612276565b3360009081526013602052604081208054600592906115209084906123df565b9091555060649050611530610de2565b118015611544575060646115426114ce565b115b801561155757506064611555611e80565b115b801561156a57506064611568610579565b115b15611573576000ff5b61157b6114bc565b6115975760405162461bcd60e51b81526004016106a690612235565b6000670de0b6b3a7640000662386f26fc100006011546115b791906123c0565b6115c191906122b3565b9050806011546115d19190612276565b6011554260065560405133907f5d39218f66077cf924e6e21bf9c7621acdec797b73228faad359024d6de0892890600090a250565b60015460405163ecb421f160e01b81523360048201819052916001600160a01b03169063ecb421f19060240160206040518083038186803b15801561164a57600080fd5b505afa15801561165e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116829190612073565b6116c75760405162461bcd60e51b81526020600482015260166024820152753830b932b73a1034b9903737ba103090323930b3b7b760511b60448201526064016106a6565b6001600160a01b0381166000908152601460205260409081902090514291906116f190859061219d565b9081526040519081900360200181209190915533907f8678ef097705f3f09f26086b9bdd0074d74b8060bd148f282a126eb50e6cb7b890611733908590612222565b60405180910390a25050565b60015460405163ecb421f160e01b81523360048201819052916001600160a01b03169063ecb421f19060240160206040518083038186803b15801561178357600080fd5b505afa158015611797573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117bb9190612073565b6118075760405162461bcd60e51b815260206004820152601860248201527f61747461636b6572206973206e6f74206120647261676f6e000000000000000060448201526064016106a6565b806001600160a01b031663a1580f1a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561184057600080fd5b505afa158015611854573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118789190612158565b600d5411611884576000ff5b806001600160a01b031663a1580f1a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156118bd57600080fd5b505afa1580156118d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118f59190612158565b600d600082825461190691906123df565b909155505060405133907f15aa33b5a3ee1603c1ded248b215cd76f29aafb7cc6aba5506d6b7550401fff090600090a250565b3360009081526013602052604081208054600592906119599084906123df565b9091555060649050611969610de2565b11801561197d5750606461197b6114ce565b115b80156119905750606461198e611e80565b115b80156119a3575060646119a1610579565b115b156119ac576000ff5b6119b46114bc565b6119d05760405162461bcd60e51b81526004016106a690612235565b6000670de0b6b3a7640000662386f26fc10000600f546119f091906123c0565b6119fa91906122b3565b905080600f54611a0a9190612276565b600f554260065560405133907fb9c0fb19e07b55ab895ef7d26d8ebeb354c7d9a6c326c1f280f5747addf280be90600090a250565b60006010546007546105e79190612276565b6064611a5b610de2565b118015611a6f57506064611a6d6114ce565b115b8015611a8257506064611a80611e80565b115b8015611a9557506064611a93610579565b115b15611a9e576000ff5b611aa6611a3f565b611af25760405162461bcd60e51b815260206004820181905260248201527f692063616e206f6e6c792061747461636b20657665727920736f206f6674656e60448201526064016106a6565b6001600160a01b038116301415611b435760405162461bcd60e51b8152602060048201526015602482015274349031b0b713ba1030ba3a30b1b59036bcb9b2b63360591b60448201526064016106a6565b336000908152601360205260408120805460059290611b639084906123df565b909155505060015460405163ecb421f160e01b81526001600160a01b0383811660048301529091169063ecb421f19060240160206040518083038186803b158015611bad57600080fd5b505afa158015611bc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611be59190612073565b611c2a5760405162461bcd60e51b81526020600482015260166024820152753a30b933b2ba1034b9903737ba103090323930b3b7b760511b60448201526064016106a6565b803b611c705760405162461bcd60e51b81526020600482015260156024820152741d185c99d95d08191c9859dbdb881a5cc819195859605a1b60448201526064016106a6565b600f54816001600160a01b0316637633a22c6040518163ffffffff1660e01b815260040160206040518083038186803b158015611cac57600080fd5b505afa158015611cc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ce49190612158565b11611ded576004816001600160a01b03166354b2fba76040518163ffffffff1660e01b815260040160206040518083038186803b158015611d2457600080fd5b505afa158015611d38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d5c9190612158565b611d6691906122b3565b600e819055506004816001600160a01b031663a1580f1a6040518163ffffffff1660e01b815260040160206040518083038186803b158015611da757600080fd5b505afa158015611dbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ddf9190612158565b611de991906122b3565b600f555b42600781905550806001600160a01b031663aa1e34096040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611e2f57600080fd5b505af1158015611e43573d6000803e3d6000fd5b50506040516001600160a01b03841692503391507f93a24e91f44890f6ead6f4f95caebbda5c7039be4277148123db9b4d2b293c9090600090a350565b600061012c60095442611e9391906123df565b611e9d91906122b3565b6012546105ad919062010000900460ff16612276565b336000908152601360205260408120805491611ece83612461565b91905055506064611edd610de2565b118015611ef157506064611eef6114ce565b115b8015611f0457506064611f02611e80565b115b8015611f1757506064611f15610579565b115b15611f20576000ff5b6005611f2a6114ce565b11611f6c5760405162461bcd60e51b81526020600482015260126024820152710d240c8dedce840dccacac840c240c4c2e8d60731b60448201526064016106a6565b42600b556012805461ff001916905560405133907f8cf0d2ab060cb4196e6b7e16c5c2f9f64b3e488ecd7b83c76bd16667b4077af090600090a2565b6000818310611fb75781611fb9565b825b90505b92915050565b600082601f830112611fd357600080fd5b813567ffffffffffffffff80821115611fee57611fee612492565b604051601f8301601f19908116603f0116810190828211818310171561201657612016612492565b8160405283815286602085880101111561202f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561206157600080fd5b813561206c816124a8565b9392505050565b60006020828403121561208557600080fd5b8151801515811461206c57600080fd5b600080604083850312156120a857600080fd5b82356120b3816124a8565b9150602083013567ffffffffffffffff8111156120cf57600080fd5b6120db85828601611fc2565b9150509250929050565b6000602082840312156120f757600080fd5b815161206c816124a8565b60006020828403121561211457600080fd5b813567ffffffffffffffff81111561212b57600080fd5b61213784828501611fc2565b949350505050565b60006020828403121561215157600080fd5b5035919050565b60006020828403121561216a57600080fd5b5051919050565b600081518084526121898160208601602086016123f6565b601f01601f19169290920160200192915050565b600082516121af8184602087016123f6565b9190910192915050565b6001600160a01b038316815260406020820181905260009061213790830184612171565b60008184825b600281101561220b5781516001600160a01b03168352602092830192909101906001016121e3565b505050606060408301526121376060830184612171565b602081526000611fb96020830184612171565b60208082526021908201527f692063616e206f6e6c79207570677261646520657665727920736f206f6674656040820152603760f91b606082015260800190565b600082198211156122895761228961247c565b500190565b600060ff821660ff84168060ff038211156122ab576122ab61247c565b019392505050565b6000826122d057634e487b7160e01b600052601260045260246000fd5b500490565b600181815b808511156123105781600019048211156122f6576122f661247c565b8085161561230357918102915b93841c93908002906122da565b509250929050565b6000611fb9838360008261232e57506001611fbc565b8161233b57506000611fbc565b8160018114612351576002811461235b57612377565b6001915050611fbc565b60ff84111561236c5761236c61247c565b50506001821b611fbc565b5060208310610133831016604e8410600b841016171561239a575081810a611fbc565b6123a483836122d5565b80600019048211156123b8576123b861247c565b029392505050565b60008160001904831182151516156123da576123da61247c565b500290565b6000828210156123f1576123f161247c565b500390565b60005b838110156124115781810151838201526020016123f9565b83811115612420576000848401525b50505050565b600181811c9082168061243a57607f821691505b6020821081141561245b57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156124755761247561247c565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146124bd57600080fd5b5056fea2646970667358221220092ab6c5799b92d1e40574c14183192e5ab3ae4aeff95d7b5849e589ea62a89864736f6c63430008060033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 32,
        "contract": "contracts/Dragon.sol:Dragon",
        "label": "egg",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 35,
        "contract": "contracts/Dragon.sol:Dragon",
        "label": "lair",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(Lair)1651"
      },
      {
        "astId": 39,
        "contract": "contracts/Dragon.sol:Dragon",
        "label": "parents",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)2_storage"
      },
      {
        "astId": 41,
        "contract": "contracts/Dragon.sol:Dragon",
        "label": "name",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 43,
        "contract": "contracts/Dragon.sol:Dragon",
        "label": "breedCount",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 45,
        "contract": "contracts/Dragon.sol:Dragon",
        "label": "lastUpgradeTimestamp",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 47,
        "contract": "contracts/Dragon.sol:Dragon",
        "label": "lastAttackTimestamp",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 49,
        "contract": "contracts/Dragon.sol:Dragon",
        "label": "lastBreedTimestamp",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 51,
        "contract": "contracts/Dragon.sol:Dragon",
        "label": "lastPlayTimestamp",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 53,
        "contract": "contracts/Dragon.sol:Dragon",
        "label": "lastFeedTimestamp",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 55,
        "contract": "contracts/Dragon.sol:Dragon",
        "label": "lastCleanTimestamp",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 57,
        "contract": "contracts/Dragon.sol:Dragon",
        "label": "lastSleepTimestamp",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 60,
        "contract": "contracts/Dragon.sol:Dragon",
        "label": "health",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 63,
        "contract": "contracts/Dragon.sol:Dragon",
        "label": "maxHealth",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 66,
        "contract": "contracts/Dragon.sol:Dragon",
        "label": "damage",
        "offset": 0,
        "slot": "15",
        "type": "t_uint256"
      },
      {
        "astId": 69,
        "contract": "contracts/Dragon.sol:Dragon",
        "label": "attackCooldown",
        "offset": 0,
        "slot": "16",
        "type": "t_uint256"
      },
      {
        "astId": 72,
        "contract": "contracts/Dragon.sol:Dragon",
        "label": "healthRegeneration",
        "offset": 0,
        "slot": "17",
        "type": "t_uint256"
      },
      {
        "astId": 74,
        "contract": "contracts/Dragon.sol:Dragon",
        "label": "hunger",
        "offset": 0,
        "slot": "18",
        "type": "t_uint8"
      },
      {
        "astId": 76,
        "contract": "contracts/Dragon.sol:Dragon",
        "label": "uncleanliness",
        "offset": 1,
        "slot": "18",
        "type": "t_uint8"
      },
      {
        "astId": 78,
        "contract": "contracts/Dragon.sol:Dragon",
        "label": "boredom",
        "offset": 2,
        "slot": "18",
        "type": "t_uint8"
      },
      {
        "astId": 80,
        "contract": "contracts/Dragon.sol:Dragon",
        "label": "sleepiness",
        "offset": 3,
        "slot": "18",
        "type": "t_uint8"
      },
      {
        "astId": 84,
        "contract": "contracts/Dragon.sol:Dragon",
        "label": "trust",
        "offset": 0,
        "slot": "19",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 91,
        "contract": "contracts/Dragon.sol:Dragon",
        "label": "breedProposals",
        "offset": 0,
        "slot": "20",
        "type": "t_mapping(t_contract(Dragon)1211,t_mapping(t_string_memory_ptr,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)2_storage": {
        "base": "t_address",
        "encoding": "inplace",
        "label": "address[2]",
        "numberOfBytes": "64"
      },
      "t_contract(Dragon)1211": {
        "encoding": "inplace",
        "label": "contract Dragon",
        "numberOfBytes": "20"
      },
      "t_contract(Lair)1651": {
        "encoding": "inplace",
        "label": "contract Lair",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_contract(Dragon)1211,t_mapping(t_string_memory_ptr,t_uint256))": {
        "encoding": "mapping",
        "key": "t_contract(Dragon)1211",
        "label": "mapping(contract Dragon => mapping(string => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_string_memory_ptr,t_uint256)"
      },
      "t_mapping(t_string_memory_ptr,t_uint256)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}