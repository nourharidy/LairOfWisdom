{
  "address": "0xcAd5E4d101b55D92F7C734338DFa5d1000fD7088",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "dragon",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "parent1",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "parent2",
          "type": "address"
        }
      ],
      "name": "DragonBirth",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "egg",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "parent1",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "parent2",
          "type": "address"
        }
      ],
      "name": "EggBirth",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "allDragons",
      "outputs": [
        {
          "internalType": "contract Dragon[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allEggs",
      "outputs": [
        {
          "internalType": "contract Egg[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[2]",
          "name": "parents",
          "type": "address[2]"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "fileDragonCertificate",
      "outputs": [
        {
          "internalType": "contract Dragon",
          "name": "dragon",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[2]",
          "name": "parents",
          "type": "address[2]"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "fileEggCertificate",
      "outputs": [
        {
          "internalType": "contract Egg",
          "name": "egg",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Dragon",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isDragon",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Egg",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isEgg",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x94ff6aa2b594fd023761f353a8188881a107ee3cfbf8f18962301d9eca596a72",
  "receipt": {
    "to": null,
    "from": "0x73f0Fb7D342632Ae3E3a3156B92dC9953e076124",
    "contractAddress": "0xcAd5E4d101b55D92F7C734338DFa5d1000fD7088",
    "transactionIndex": 0,
    "gasUsed": "126932319",
    "logsBloom": "0x
    "blockHash": "0x7077aa0e68edf2fbaafe23b46c26c6dfac2d65347c4a0ddb3f3219df5a115351",
    "transactionHash": "0x94ff6aa2b594fd023761f353a8188881a107ee3cfbf8f18962301d9eca596a72",
    "logs": [],
    "blockNumber": 695939,
    "cumulativeGasUsed": "98447739",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "713c5384cf117a862e9922d25fceed58",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dragon\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"parent1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"parent2\",\"type\":\"address\"}],\"name\":\"DragonBirth\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"egg\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"parent1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"parent2\",\"type\":\"address\"}],\"name\":\"EggBirth\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"allDragons\",\"outputs\":[{\"internalType\":\"contract Dragon[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allEggs\",\"outputs\":[{\"internalType\":\"contract Egg[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[2]\",\"name\":\"parents\",\"type\":\"address[2]\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"fileDragonCertificate\",\"outputs\":[{\"internalType\":\"contract Dragon\",\"name\":\"dragon\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[2]\",\"name\":\"parents\",\"type\":\"address[2]\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"fileEggCertificate\",\"outputs\":[{\"internalType\":\"contract Egg\",\"name\":\"egg\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Dragon\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isDragon\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Egg\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isEgg\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Lair.sol\":\"Lair\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Dragon.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.6;\\n\\nimport \\\"./Lair.sol\\\";\\nimport \\\"./Egg.sol\\\";\\n\\ncontract Dragon {\\n\\n    uint constant UPGRADE_COOLDOWN = 2 hours;\\n    uint constant INIT_BREED_COOLDOWN = 1 days;\\n    uint constant BREED_PROPOSAL_TIMEOUT = 7 days;\\n    uint constant UPGRADE_FACTOR = 0.01 ether; // 1%\\n    uint constant UPGRADE_COST = 5;\\n    uint constant HEAL_COST = 1;\\n    uint constant ATTACK_COST = 5; \\n    uint constant BREED_COST = 10;\\n    uint constant STATS_TIME_DECAY_DENOM = 10 minutes; // stats decay by 1% every 10 minutes\\n\\n    address public egg;\\n    Lair public lair;\\n    address[2] public parents;\\n    string public name;\\n    uint public breedCount;\\n    uint lastUpgradeTimestamp;\\n    uint lastAttackTimestamp;\\n    uint lastBreedTimestamp;\\n    uint lastPlayTimestamp;\\n    uint lastFeedTimestamp;\\n    uint lastCleanTimestamp;\\n    uint lastSleepTimestamp;\\n    uint public health = 1000000;\\n    uint public maxHealth = 1000000;\\n    uint public damage = 20000;\\n    uint public attackCooldown = 1 hours;\\n    uint public healthRegeneration = 2000;\\n    uint8 hunger;\\n    uint8 uncleanliness;\\n    uint8 boredom;\\n    uint8 sleepiness;\\n    mapping (address => uint) public trust;\\n    mapping (Dragon => mapping (string => uint)) public breedProposals;\\n\\n    constructor(address _egg, Lair _lair, address[2] memory _parents, string memory _name) {\\n        egg = _egg;\\n        lair = _lair;\\n        parents = _parents;\\n        name = _name;\\n        lastUpgradeTimestamp = block.timestamp;\\n        lastAttackTimestamp = block.timestamp;\\n        lastPlayTimestamp = block.timestamp;\\n        lastFeedTimestamp = block.timestamp;\\n        lastCleanTimestamp = block.timestamp;\\n        lastSleepTimestamp = block.timestamp;\\n        lastBreedTimestamp = block.timestamp;\\n    }\\n\\n    modifier IfAlive {\\n        if(\\n            getHunger() > 100 &&\\n            getUncleanliness() > 100 &&\\n            getBoredom() > 100 &&\\n            getSleepiness() > 100) {\\n                selfdestruct(payable(0)); // die\\n            }\\n        _;\\n    }\\n\\n    modifier earnsTrust {\\n        trust[msg.sender]++;\\n        _;\\n    } \\n\\n    modifier consumesTrust {\\n        trust[msg.sender] -= UPGRADE_COST;\\n        _;\\n    }\\n\\n    /*\\n        Healing\\n    */\\n\\n    function heal() public IfAlive {\\n        trust[msg.sender] -= HEAL_COST;\\n        health = min(health + healthRegeneration, maxHealth);\\n        emit Heal(msg.sender);\\n    }\\n\\n    /*\\n        Attack\\n    */\\n    function canAttack() public view returns (bool) {\\n        return block.timestamp > lastAttackTimestamp + attackCooldown;\\n    }\\n\\n    function secondsUntilAttack() public view returns (uint) {\\n        if(canAttack()) return 0;\\n        return block.timestamp - lastAttackTimestamp + attackCooldown;\\n    }\\n\\n    function attack(Dragon target) public IfAlive {\\n        require(canAttack(), \\\"i can only attack every so often\\\");\\n        require(target != this, \\\"i can't attack myself\\\");\\n        trust[msg.sender] -= ATTACK_COST;\\n        require(lair.isDragon(target), \\\"target is not a dragon\\\");\\n        require(isContract(address(target)), \\\"target dragon is dead\\\");\\n        if(target.health() <= damage) { // target will die\\n            maxHealth = target.maxHealth() / 4; // consume 1/4 maxHealth\\n            damage = target.damage() / 4; // consume 1/4 damage\\n        }\\n        lastAttackTimestamp = block.timestamp;\\n        target.onAttack();\\n        emit Attack(msg.sender, address(target));\\n    }\\n\\n    function onAttack() public {\\n        Dragon attacker = Dragon(msg.sender);\\n        require(lair.isDragon(attacker), \\\"attacker is not a dragon\\\");\\n        if(health <= attacker.damage()) {\\n            selfdestruct(payable(0)); // die\\n        }\\n        health -= attacker.damage();\\n        emit Damaged(msg.sender);\\n    }\\n\\n    /*\\n        Breeding\\n    */\\n\\n    function proposeBreeding(Dragon parent, string memory childName) public IfAlive {\\n        trust[msg.sender] -= BREED_COST; // proposals also have cost\\n        require(lair.isDragon(parent), \\\"parent is not a dragon\\\");\\n        require(isContract(address(parent)), \\\"parent dragon is dead\\\");\\n        require(parent != this, \\\"i can't breed with myself\\\");\\n        require(bytes(childName).length > 0, \\\"my child must have a name\\\");\\n        parent.onBreedProposal(childName);\\n        emit ProposeBreed(msg.sender, address(parent), childName);\\n    }\\n\\n    function onBreedProposal(string memory childName) public {\\n        Dragon parent = Dragon(msg.sender);\\n        require(lair.isDragon(parent), \\\"parent is not a dragon\\\");\\n        breedProposals[parent][childName] = block.timestamp;\\n        emit ReceiveBreedProposal(msg.sender, childName);\\n    }\\n\\n    function canBreed() public view returns (bool) {\\n        return block.timestamp > lastBreedTimestamp + (INIT_BREED_COOLDOWN * (2**(breedCount + 1)));\\n    }\\n\\n    function secondsUntilBreed() public view returns (uint) {\\n        if(canBreed()) return 0;\\n        return block.timestamp - lastBreedTimestamp + (INIT_BREED_COOLDOWN * (2**(breedCount + 1)));\\n    }\\n\\n    function breed(Dragon parent, string memory childName) public IfAlive returns (Egg _egg) {\\n        trust[msg.sender] -= BREED_COST; // proposals also have cost\\n        uint proposalTimestamp = breedProposals[parent][childName];\\n        require(proposalTimestamp > 0, \\\"breed proposal does not exist\\\");\\n        require(block.timestamp < proposalTimestamp + BREED_PROPOSAL_TIMEOUT, \\\"breed proposal expired\\\");\\n        require(canBreed(), \\\"I can't breed yet\\\");\\n        address[2] memory _parents = [address(this), address(parent)];\\n        _egg = lair.fileEggCertificate(_parents, childName);\\n        lastBreedTimestamp = block.timestamp;\\n        breedProposals[parent][childName] = 0;\\n        breedCount++;\\n        emit Breed(msg.sender, address(parent), address(_egg), childName);\\n    }\\n\\n    /*\\n        Upgrades\\n    */\\n\\n    function canUpgrade() public view returns (bool) {\\n        return block.timestamp > lastUpgradeTimestamp + UPGRADE_COOLDOWN;\\n    }\\n\\n    function secondsUntilUpgrade() public view returns (uint) {\\n        if(canUpgrade()) return 0;\\n        return block.timestamp - lastUpgradeTimestamp + UPGRADE_COOLDOWN;\\n    }\\n\\n    function upgradeMaxHealth() public consumesTrust IfAlive {\\n        require(canUpgrade(), \\\"i can only upgrade every so often\\\");\\n        uint extraMaxHealth = maxHealth * UPGRADE_FACTOR / 1 ether;\\n        maxHealth = maxHealth + extraMaxHealth;\\n        lastUpgradeTimestamp = block.timestamp;\\n        emit UpgradeMaxHealth(msg.sender);\\n    }\\n\\n    function upgradeHealing() public consumesTrust IfAlive {\\n        require(canUpgrade(), \\\"i can only upgrade every so often\\\");\\n        uint extraHealPoints = healthRegeneration * UPGRADE_FACTOR / 1 ether;\\n        healthRegeneration = healthRegeneration + extraHealPoints;\\n        lastUpgradeTimestamp = block.timestamp;\\n        emit UpgradeHealing(msg.sender);\\n    }\\n\\n    function upgradeDamage() public consumesTrust IfAlive {\\n        require(canUpgrade(), \\\"i can only upgrade every so often\\\");\\n        uint addedDamage = damage * UPGRADE_FACTOR / 1 ether;\\n        damage = damage + addedDamage;\\n        lastUpgradeTimestamp = block.timestamp;\\n        emit UpgradeDamage(msg.sender);\\n    }\\n\\n    function upgradeAttackCooldown() public consumesTrust IfAlive {\\n        require(canUpgrade(), \\\"i can only upgrade every so often\\\");\\n        uint removedAttackCooldown = attackCooldown * UPGRADE_FACTOR / 1 ether;\\n        attackCooldown = attackCooldown - removedAttackCooldown;\\n        lastUpgradeTimestamp = block.timestamp;\\n        emit UpgradeAttackCooldown(msg.sender);\\n    }\\n\\n    /*\\n        Caretaking\\n    */\\n\\n    function feed() public earnsTrust IfAlive {\\n        require(getHunger() > 50, \\\"i dont need to eat\\\");\\n        require(getBoredom() < 80, \\\"im too tired to eat\\\");\\n        require(getUncleanliness() < 80, \\\"im feeling too gross to eat\\\");\\n        lastFeedTimestamp = block.timestamp;\\n        \\n        hunger = 0;\\n        boredom += 10;\\n        uncleanliness += 3;\\n        emit Feed(msg.sender);\\n    }\\n\\n    function clean() public earnsTrust IfAlive {\\n        require(getUncleanliness() > 50, \\\"i dont need a bath\\\");\\n        lastCleanTimestamp = block.timestamp;\\n        \\n        uncleanliness = 0;\\n        emit Clean(msg.sender);\\n    }\\n\\n    function play() public earnsTrust IfAlive {\\n        require(getBoredom() > 50, \\\"i dont wanna play\\\");\\n        require(getHunger() < 80, \\\"im too hungry to play\\\");\\n        require(getSleepiness() < 80, \\\"im too sleepy to play\\\");\\n        require(getUncleanliness() < 80, \\\"im feeling too gross to play\\\");\\n        lastPlayTimestamp = block.timestamp;\\n        \\n        boredom = 0;\\n        hunger += 10;\\n        sleepiness += 10;\\n        uncleanliness += 5;\\n        emit Play(msg.sender);\\n    }\\n\\n    function sleep() public earnsTrust IfAlive {\\n        require(getSleepiness() > 50, \\\"im not feeling sleepy\\\");\\n        require(getUncleanliness() < 80, \\\"im feeling too gross to sleep\\\");\\n        \\n        lastSleepTimestamp = block.timestamp;\\n        \\n        sleepiness = 0;\\n        uncleanliness += 5;\\n        emit Sleep(msg.sender);\\n    }\\n\\n    function getHunger() public view returns (uint256) {\\n        return hunger + ((block.timestamp - lastFeedTimestamp) / STATS_TIME_DECAY_DENOM);\\n    }\\n    \\n    function getUncleanliness() public view returns (uint256) {\\n        return uncleanliness + ((block.timestamp - lastCleanTimestamp) / STATS_TIME_DECAY_DENOM);\\n    }\\n    \\n    function getBoredom() public view returns (uint256) {\\n        return boredom + ((block.timestamp - lastPlayTimestamp) / STATS_TIME_DECAY_DENOM);\\n    }\\n    \\n    function getSleepiness() public view returns (uint256) {\\n        return sleepiness + ((block.timestamp - lastSleepTimestamp) / STATS_TIME_DECAY_DENOM);\\n    }\\n\\n    /*\\n        Utils\\n    */\\n\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    function isContract(address account) internal view returns (bool) {\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    event Play(address indexed trainer);\\n    event Feed(address indexed trainer);\\n    event Sleep(address indexed trainer);\\n    event Clean(address indexed trainer);\\n    event Heal(address indexed trainer);\\n    event UpgradeDamage(address indexed trainer);\\n    event UpgradeAttackCooldown(address indexed trainer);\\n    event UpgradeMaxHealth(address indexed trainer);\\n    event UpgradeHealing(address indexed trainer);\\n    event Attack(address indexed trainer, address indexed target);\\n    event Damaged(address indexed attacker);\\n    event ProposeBreed(address indexed trainer, address indexed parent, string childName);\\n    event ReceiveBreedProposal(address indexed parent, string childName);\\n    event Breed(address indexed trainer, address indexed parent, address egg, string childName);\\n}\",\"keccak256\":\"0x5b336e4c443b3664eacd9303d0e187d45fedeb245f3b89ee551de9683e52d237\",\"license\":\"UNLICENSED\"},\"contracts/Egg.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.6;\\n\\nimport \\\"./Lair.sol\\\";\\nimport \\\"./Dragon.sol\\\";\\n\\ncontract Egg {\\n\\n    string public name;\\n    uint constant BIRTH_DURATION = 12 hours;\\n    address[2] public parents;\\n    uint public creationTimestamp;\\n    bool public born;\\n    Lair public lair;\\n    uint tributes;\\n\\n    constructor(Lair _lair, address[2] memory _parents, string memory _name) {\\n        name = _name;\\n        parents = _parents;\\n        lair = _lair;\\n        creationTimestamp = block.timestamp;\\n    }\\n\\n    function isHatched() public view returns (bool) {\\n        return block.timestamp > creationTimestamp + BIRTH_DURATION - tributes;\\n    }\\n\\n    function secondsUntilHatched() public view returns (uint) {\\n        if(isHatched()) {\\n            return 0;\\n        }\\n\\n        return block.timestamp - creationTimestamp + BIRTH_DURATION - tributes;\\n    }\\n\\n    function getTributes() public view returns (uint) {\\n        return tributes / 1000;\\n    }\\n\\n    function giveTribute() public {\\n        require(!isHatched(), \\\"im already hatched\\\");\\n        if(tributes + 1000 <= BIRTH_DURATION) {\\n            tributes += 1000;\\n            emit Tribute(msg.sender);\\n        }\\n    }\\n\\n    function giveBirth() public returns (Dragon dragon) {\\n        if(!born && isHatched()) {\\n            dragon = lair.fileDragonCertificate(parents, name);\\n            born = true;\\n            emit Birth(msg.sender);\\n        }\\n    }\\n\\n    event Tribute(address indexed trainer);\\n    event Birth(address indexed trainer);\\n\\n\\n}\",\"keccak256\":\"0x9e99cfd1b6a0df06e3531b08233e440102fb1e71915b186da2d30245bcc298a2\",\"license\":\"UNLICENSED\"},\"contracts/Lair.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.6;\\n\\nimport \\\"./Dragon.sol\\\";\\nimport \\\"./Egg.sol\\\";\\n\\ncontract Lair {\\n\\n    Dragon[] dragons;\\n    mapping (Dragon => bool) public isDragon;\\n\\n    Egg[] eggs;\\n    mapping (Egg => bool) public isEgg;\\n\\n    bool started;\\n\\n    function startGame() public {\\n        require(!started);\\n        address[2] memory parents = [address(0), address(0)];\\n        Egg leshner = new Egg(this, parents, \\\"Leshner\\\");\\n        eggs.push(leshner);\\n        isEgg[leshner] = true;\\n        emit EggBirth(address(leshner), parents[0], parents[1]);\\n        Egg pleasr = new Egg(this, parents, \\\"Pleasr\\\");\\n        eggs.push(pleasr);\\n        isEgg[pleasr] = true;\\n        emit EggBirth(address(pleasr), parents[0], parents[1]);\\n        started = true;\\n    }\\n\\n    function fileDragonCertificate(address[2] memory parents, string memory name) external returns (Dragon dragon) {\\n        require(isEgg[Egg(msg.sender)]);\\n        dragon = new Dragon(msg.sender, this, parents, name);\\n        dragons.push(dragon);\\n        isDragon[dragon] = true;\\n        emit DragonBirth(address(dragon), parents[0], parents[1]);\\n    }\\n\\n    function fileEggCertificate(address[2] memory parents, string memory name) external returns (Egg egg)  {\\n        require(isDragon[Dragon(msg.sender)]);\\n        egg = new Egg(this, parents, name);\\n        eggs.push(egg);\\n        isEgg[egg] = true;\\n        emit EggBirth(address(egg), parents[0], parents[1]);\\n    }\\n\\n    function allDragons() public view returns (Dragon[] memory) {\\n        return dragons;\\n    }\\n\\n    function allEggs() public view returns (Egg[] memory) {\\n        return eggs;\\n    }\\n\\n    event DragonBirth(address indexed dragon, address indexed parent1, address indexed parent2);\\n    event EggBirth(address indexed egg, address indexed parent1, address indexed parent2);\\n}\",\"keccak256\":\"0xdf2e7d6f13db48ffc34d1c1f55e44704823e951f0e7107450dd78723ee32d5a4\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50613d1b806100206000396000f3fe60806040523480156200001157600080fd5b5060043610620000875760003560e01c8063d65ab5f21162000062578063d65ab5f21462000110578063ddb45f92146200011c578063e7d7ec451462000126578063ecb421f1146200013d57600080fd5b80633c1d98fc146200008c578063a0ec04df14620000c0578063d199515914620000f7575b600080fd5b620000a36200009d366004620006ca565b62000163565b6040516001600160a01b0390911681526020015b60405180910390f35b620000e6620000d136600462000772565b60036020526000908152604090205460ff1681565b6040519015158152602001620000b7565b6200010162000262565b604051620000b7919062000862565b6200011a620002c6565b005b62000101620004b8565b620000a362000137366004620006ca565b6200051a565b620000e66200014e36600462000772565b60016020526000908152604090205460ff1681565b3360009081526003602052604081205460ff166200018057600080fd5b33308484604051620001929062000619565b620001a194939291906200081d565b604051809103906000f080158015620001be573d6000803e3d6000fd5b5060008054600180820183557f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56390910180546001600160a01b0319166001600160a01b0385811691821790925580845260208381526040808620805460ff191690951790945588015188519351959650821694929091169290917ff717828758fad3f85b7c5e053ae461b85d7760ced4c432dd471ddedbc9645a519190a492915050565b60606000805480602002602001604051908101604052809291908181526020018280548015620002bc57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116200029d575b5050505050905090565b60045460ff1615620002d757600080fd5b604080518082018252600080825260208201819052915190919030908390620003009062000627565b6200030d9291906200092f565b604051809103906000f0801580156200032a573d6000803e3d6000fd5b506002805460018082019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b038481169182179092556000818152600360209081526040808320805460ff191690961790955587015187519451959650831694939092169290917fb36c09351de782c2b188a5f2ffd89e8a1f26f1e4e1bb10b27fb92a08f707fdc691a460003083604051620003dc9062000627565b620003e9929190620008ed565b604051809103906000f08015801562000406573d6000803e3d6000fd5b506002805460018082019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b038481169182179092556000818152600360209081526040808320805460ff191690961790955588015188519451959650831694939092169290917fb36c09351de782c2b188a5f2ffd89e8a1f26f1e4e1bb10b27fb92a08f707fdc691a450506004805460ff1916600117905550565b60606002805480602002602001604051908101604052809291908181526020018280548015620002bc576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116200029d575050505050905090565b3360009081526001602052604081205460ff166200053757600080fd5b308383604051620005489062000627565b6200055693929190620008b1565b604051809103906000f08015801562000573573d6000803e3d6000fd5b506002805460018082019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b038481169182179092556000818152600360209081526040808320805460ff191690961790955588015188519451959650831694939092169290917fb36c09351de782c2b188a5f2ffd89e8a1f26f1e4e1bb10b27fb92a08f707fdc691a492915050565b61290080620009ce83390190565b610a1880620032ce83390190565b600082601f8301126200064757600080fd5b813567ffffffffffffffff808211156200066557620006656200099e565b604051601f8301601f19908116603f011681019082821181831017156200069057620006906200099e565b81604052838152866020858801011115620006aa57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060608385031215620006de57600080fd5b83601f840112620006ee57600080fd5b620006f862000972565b808460408601878111156200070c57600080fd5b60005b60028110156200073c5782356200072681620009b4565b855260209485019492909201916001016200070f565b509194505035905067ffffffffffffffff8111156200075a57600080fd5b620007688582860162000635565b9150509250929050565b6000602082840312156200078557600080fd5b81356200079281620009b4565b9392505050565b8060005b6002811015620007c75781516001600160a01b03168452602093840193909101906001016200079d565b50505050565b6000815180845260005b81811015620007f557602081850181015186830182015201620007d7565b8181111562000808576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b03858116825284166020820152600062000842604083018562000799565b60a060808301526200085860a0830184620007cd565b9695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015620008a55783516001600160a01b0316835292840192918401916001016200087e565b50909695505050505050565b6001600160a01b0384168152620008cc602082018462000799565b608060608201526000620008e46080830184620007cd565b95945050505050565b6001600160a01b038316815262000908602082018362000799565b60806060820181905260069082015265283632b0b9b960d11b60a082015260c00192915050565b6001600160a01b03831681526200094a602082018362000799565b608060608201819052600790820152662632b9b43732b960c91b60a082015260c00192915050565b6040805190810167ffffffffffffffff811182821017156200099857620009986200099e565b60405290565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114620009ca57600080fd5b5056fe6080604052620f4240600d55620f4240600e55614e20600f55610e106010556107d06011553480156200003157600080fd5b50604051620029003803806200290083398101604081905262000054916200025c565b600080546001600160a01b038087166001600160a01b03199283161790925560018054928616929091169190911790556200009260028381620000d6565b508051620000a890600490602084019062000133565b505042600681905560078190556009819055600a819055600b819055600c81905560085550620003f8915050565b826002810192821562000121579160200282015b828111156200012157825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620000ea565b506200012f929150620001b0565b5090565b82805462000141906200038c565b90600052602060002090601f01602090048101928262000165576000855562000121565b82601f106200018057805160ff191683800117855562000121565b8280016001018555821562000121579182015b828111156200012157825182559160200191906001019062000193565b5b808211156200012f5760008155600101620001b1565b600082601f830112620001d957600080fd5b81516001600160401b03811115620001f557620001f5620003c9565b60206200020b601f8301601f1916820162000359565b82815285828487010111156200022057600080fd5b60005b838110156200024057858101830151828201840152820162000223565b83811115620002525760008385840101525b5095945050505050565b60008060008060a085870312156200027357600080fd5b84516200028081620003df565b809450506020808601516200029581620003df565b9350605f86018713620002a757600080fd5b620002b16200032e565b8060408801608089018a811115620002c857600080fd5b60005b6002811015620002f5578251620002e281620003df565b85529385019391850191600101620002cb565b505191955090925050506001600160401b038111156200031457600080fd5b6200032287828801620001c7565b91505092959194509250565b604080519081016001600160401b0381118282101715620003535762000353620003c9565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620003845762000384620003c9565b604052919050565b600181811c90821680620003a157607f821691505b60208210811415620003c357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114620003f557600080fd5b50565b6124f880620004086000396000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c8063898572a611610125578063c06abfc7116100ad578063d018db3e1161007c578063d018db3e146103f9578063e608eb1f1461040c578063e73961f514610415578063f19d55051461041e578063fc4333cd1461042657600080fd5b8063c06abfc71461039a578063c6340786146103ad578063ccd30b5e146103e9578063cdf55f8b146103f157600080fd5b8063a104a64f116100f4578063a104a64f14610366578063a1580f1a1461036e578063a1e5725314610377578063a22ae22d1461037f578063aa1e34091461039257600080fd5b8063898572a61461033a57806391cbd0011461034d57806393e84cd9146103565780639738968c1461035e57600080fd5b806337a7b7d8116101a857806354b2fba71161017757806354b2fba7146103055780636599c9e01461030e5780637633a22c1461032157806378d245281461032a57806388e1cad51461033257600080fd5b806337a7b7d8146102cd57806344d8d5ff146102d55780634637d827146102dd5780634fccdfcd146102fd57600080fd5b8063133a473e116101ef578063133a473e14610277578063200dfb1b1461027f57806326d71ad7146102aa5780632e4dab29146102b257806333e1c1b3146102c557600080fd5b80630434fe0b1461022157806306fdde031461022b5780630d3b3b5c146102495780630d9341f21461025f575b600080fd5b61022961042e565b005b6102336104eb565b6040516102409190612224565b60405180910390f35b610251610579565b604051908152602001610240565b6102676105b2565b6040519015158152602001610240565b6102296105ef565b600154610292906001600160a01b031681565b6040516001600160a01b039091168152602001610240565b610251610783565b6102926102c0366004612097565b6107d5565b610229610aac565b610229610bb2565b610251610dbe565b6102516102eb366004612051565b60136020526000908152604090205481565b610251610de4565b610251600e5481565b61022961031c366004612097565b610e11565b610251600d5481565b6102516110e2565b610229611107565b610292610348366004612141565b61120d565b61025160115481565b61022961122d565b6102676114be565b6102516114d0565b610251600f5481565b610229611502565b61022961038d366004612104565b611608565b610229611741565b600054610292906001600160a01b031681565b6102516103bb366004612097565b6014602090815260009283526040909220815180830184018051928152908401929093019190912091525481565b61022961193b565b610267611a41565b610229610407366004612051565b611a53565b61025160055481565b61025160105481565b610251611e82565b610229611eb5565b6064610438610de4565b11801561044c5750606461044a6114d0565b115b801561045f5750606461045d611e82565b115b801561047257506064610470610579565b115b1561047b576000ff5b33600090815260136020526040812080546001929061049b9084906123e1565b9091555050601154600d546104bb916104b391612278565b600e54611faa565b600d5560405133907fff9eb7a48a8603f92a1e9a4812604a575e69a2998e329bec8931566ae6435db990600090a2565b600480546104f890612428565b80601f016020809104026020016040519081016040528092919081815260200182805461052490612428565b80156105715780601f1061054657610100808354040283529160200191610571565b820191906000526020600020905b81548152906001019060200180831161055457829003601f168201915b505050505081565b6000610258600c544261058c91906123e1565b61059691906122b5565b6012546105ad91906301000000900460ff16612278565b905090565b600060055460016105c39190612278565b6105ce90600261231a565b6105db90620151806123c2565b6008546105e89190612278565b4211905090565b33600090815260136020526040812080549161060a83612463565b91905055506064610619610de4565b11801561062d5750606461062b6114d0565b115b80156106405750606461063e611e82565b115b801561065357506064610651610579565b115b1561065c576000ff5b6032610666610579565b116106b05760405162461bcd60e51b8152602060048201526015602482015274696d206e6f74206665656c696e6720736c6565707960581b60448201526064015b60405180910390fd5b60506106ba6114d0565b106107075760405162461bcd60e51b815260206004820152601d60248201527f696d206665656c696e6720746f6f2067726f737320746f20736c65657000000060448201526064016106a7565b42600c556012805463ff000000191680825560059190600190610733908490610100900460ff16612290565b92506101000a81548160ff021916908360ff160217905550336001600160a01b03167f331806c31f242e16e4ff517579b617cc23af9c93f9f014242c5a75a156ff1d1e60405160405180910390a2565b600061078d6105b2565b156107985750600090565b6005546107a6906001612278565b6107b190600261231a565b6107be90620151806123c2565b6008546107cb90426123e1565b6105ad9190612278565b600060646107e1610de4565b1180156107f5575060646107f36114d0565b115b801561080857506064610806611e82565b115b801561081b57506064610819610579565b115b15610824576000ff5b3360009081526013602052604081208054600a92906108449084906123e1565b90915550506001600160a01b038316600090815260146020526040808220905161086f90859061219f565b9081526020016040518091039020549050600081116108d05760405162461bcd60e51b815260206004820152601d60248201527f62726565642070726f706f73616c20646f6573206e6f7420657869737400000060448201526064016106a7565b6108dd62093a8082612278565b42106109245760405162461bcd60e51b8152602060048201526016602482015275189c995959081c1c9bdc1bdcd85b08195e1c1a5c995960521b60448201526064016106a7565b61092c6105b2565b61096c5760405162461bcd60e51b8152602060048201526011602482015270124818d85b89dd08189c995959081e595d607a1b60448201526064016106a7565b6040805180820182523081526001600160a01b038681166020830152600154925163e7d7ec4560e01b81529192169063e7d7ec45906109b190849088906004016121df565b602060405180830381600087803b1580156109cb57600080fd5b505af11580156109df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0391906120e7565b426008556001600160a01b03861660009081526014602052604080822090519295509091610a3290879061219f565b9081526040519081900360200190205560058054906000610a5283612463565b9190505550846001600160a01b0316336001600160a01b03167f28de2430f3295bcd73f9e551fbdc7db150aa9ee339527aa15a3036d81ce295558587604051610a9c9291906121bb565b60405180910390a3505092915050565b336000908152601360205260408120805460059290610acc9084906123e1565b9091555060649050610adc610de4565b118015610af057506064610aee6114d0565b115b8015610b0357506064610b01611e82565b115b8015610b1657506064610b14610579565b115b15610b1f576000ff5b610b276114be565b610b435760405162461bcd60e51b81526004016106a790612237565b6000670de0b6b3a7640000662386f26fc10000601054610b6391906123c2565b610b6d91906122b5565b905080601054610b7d91906123e1565b6010554260065560405133907f90cf1b01ab6e7af5b60e709721d8d77d70eaabec242ce78bb71f2cd0114aa4c990600090a250565b336000908152601360205260408120805491610bcd83612463565b91905055506064610bdc610de4565b118015610bf057506064610bee6114d0565b115b8015610c0357506064610c01611e82565b115b8015610c1657506064610c14610579565b115b15610c1f576000ff5b6032610c29610de4565b11610c6b5760405162461bcd60e51b81526020600482015260126024820152711a48191bdb9d081b995959081d1bc819585d60721b60448201526064016106a7565b6050610c75611e82565b10610cb85760405162461bcd60e51b81526020600482015260136024820152721a5b481d1bdbc81d1a5c9959081d1bc819585d606a1b60448201526064016106a7565b6050610cc26114d0565b10610d0f5760405162461bcd60e51b815260206004820152601b60248201527f696d206665656c696e6720746f6f2067726f737320746f20656174000000000060448201526064016106a7565b42600a9081556012805460ff1916808255600290610d3790849062010000900460ff16612290565b92506101000a81548160ff021916908360ff1602179055506003601260018282829054906101000a900460ff16610d6e9190612290565b92506101000a81548160ff021916908360ff160217905550336001600160a01b03167f28d993421cf9d4698b7dc17b77350fef06f1e38b590292cd54364f132f4eddd160405160405180910390a2565b6000610dc86114be565b15610dd35750600090565b611c20600654426107cb91906123e1565b6000610258600a5442610df791906123e1565b610e0191906122b5565b6012546105ad919060ff16612278565b6064610e1b610de4565b118015610e2f57506064610e2d6114d0565b115b8015610e4257506064610e40611e82565b115b8015610e5557506064610e53610579565b115b15610e5e576000ff5b3360009081526013602052604081208054600a9290610e7e9084906123e1565b909155505060015460405163ecb421f160e01b81526001600160a01b0384811660048301529091169063ecb421f19060240160206040518083038186803b158015610ec857600080fd5b505afa158015610edc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f009190612075565b610f455760405162461bcd60e51b81526020600482015260166024820152753830b932b73a1034b9903737ba103090323930b3b7b760511b60448201526064016106a7565b813b610f8b5760405162461bcd60e51b81526020600482015260156024820152741c185c995b9d08191c9859dbdb881a5cc819195859605a1b60448201526064016106a7565b6001600160a01b038216301415610fe45760405162461bcd60e51b815260206004820152601960248201527f692063616e27742062726565642077697468206d7973656c660000000000000060448201526064016106a7565b60008151116110355760405162461bcd60e51b815260206004820152601960248201527f6d79206368696c64206d75737420686176652061206e616d650000000000000060448201526064016106a7565b60405163a22ae22d60e01b81526001600160a01b0383169063a22ae22d90611061908490600401612224565b600060405180830381600087803b15801561107b57600080fd5b505af115801561108f573d6000803e3d6000fd5b50505050816001600160a01b0316336001600160a01b03167fa8d2e33455633dd30964014895ce928ba8db50c3516b65edf29cb8e6e8986d99836040516110d69190612224565b60405180910390a35050565b60006110ec611a41565b156110f75750600090565b6010546007546107cb90426123e1565b3360009081526013602052604081208054600592906111279084906123e1565b9091555060649050611137610de4565b11801561114b575060646111496114d0565b115b801561115e5750606461115c611e82565b115b80156111715750606461116f610579565b115b1561117a576000ff5b6111826114be565b61119e5760405162461bcd60e51b81526004016106a790612237565b6000670de0b6b3a7640000662386f26fc10000600e546111be91906123c2565b6111c891906122b5565b905080600e546111d89190612278565b600e554260065560405133907f91d3e258daf82fb8b7ea577075218d281413467ff849d8ae027c3f4e2dda788a90600090a250565b6002816002811061121d57600080fd5b01546001600160a01b0316905081565b33600090815260136020526040812080549161124883612463565b91905055506064611257610de4565b11801561126b575060646112696114d0565b115b801561127e5750606461127c611e82565b115b80156112915750606461128f610579565b115b1561129a576000ff5b60326112a4611e82565b116112e55760405162461bcd60e51b81526020600482015260116024820152706920646f6e742077616e6e6120706c617960781b60448201526064016106a7565b60506112ef610de4565b106113345760405162461bcd60e51b8152602060048201526015602482015274696d20746f6f2068756e67727920746f20706c617960581b60448201526064016106a7565b605061133e610579565b106113835760405162461bcd60e51b8152602060048201526015602482015274696d20746f6f20736c6565707920746f20706c617960581b60448201526064016106a7565b605061138d6114d0565b106113da5760405162461bcd60e51b815260206004820152601c60248201527f696d206665656c696e6720746f6f2067726f737320746f20706c61790000000060448201526064016106a7565b426009556012805462ff00001981168255600a919060009061140090849060ff16612290565b92506101000a81548160ff021916908360ff160217905550600a601260038282829054906101000a900460ff166114379190612290565b92506101000a81548160ff021916908360ff1602179055506005601260018282829054906101000a900460ff1661146e9190612290565b92506101000a81548160ff021916908360ff160217905550336001600160a01b03167f74ff4718bf0d5b38ef942dd8fd82b6a7af50cb06df94b380e3bd953df8e34a3c60405160405180910390a2565b6000611c206006546105e89190612278565b6000610258600b54426114e391906123e1565b6114ed91906122b5565b6012546105ad9190610100900460ff16612278565b3360009081526013602052604081208054600592906115229084906123e1565b9091555060649050611532610de4565b118015611546575060646115446114d0565b115b801561155957506064611557611e82565b115b801561156c5750606461156a610579565b115b15611575576000ff5b61157d6114be565b6115995760405162461bcd60e51b81526004016106a790612237565b6000670de0b6b3a7640000662386f26fc100006011546115b991906123c2565b6115c391906122b5565b9050806011546115d39190612278565b6011554260065560405133907f5d39218f66077cf924e6e21bf9c7621acdec797b73228faad359024d6de0892890600090a250565b60015460405163ecb421f160e01b81523360048201819052916001600160a01b03169063ecb421f19060240160206040518083038186803b15801561164c57600080fd5b505afa158015611660573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116849190612075565b6116c95760405162461bcd60e51b81526020600482015260166024820152753830b932b73a1034b9903737ba103090323930b3b7b760511b60448201526064016106a7565b6001600160a01b0381166000908152601460205260409081902090514291906116f390859061219f565b9081526040519081900360200181209190915533907f8678ef097705f3f09f26086b9bdd0074d74b8060bd148f282a126eb50e6cb7b890611735908590612224565b60405180910390a25050565b60015460405163ecb421f160e01b81523360048201819052916001600160a01b03169063ecb421f19060240160206040518083038186803b15801561178557600080fd5b505afa158015611799573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117bd9190612075565b6118095760405162461bcd60e51b815260206004820152601860248201527f61747461636b6572206973206e6f74206120647261676f6e000000000000000060448201526064016106a7565b806001600160a01b031663a1580f1a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561184257600080fd5b505afa158015611856573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061187a919061215a565b600d5411611886576000ff5b806001600160a01b031663a1580f1a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156118bf57600080fd5b505afa1580156118d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118f7919061215a565b600d600082825461190891906123e1565b909155505060405133907f15aa33b5a3ee1603c1ded248b215cd76f29aafb7cc6aba5506d6b7550401fff090600090a250565b33600090815260136020526040812080546005929061195b9084906123e1565b909155506064905061196b610de4565b11801561197f5750606461197d6114d0565b115b801561199257506064611990611e82565b115b80156119a5575060646119a3610579565b115b156119ae576000ff5b6119b66114be565b6119d25760405162461bcd60e51b81526004016106a790612237565b6000670de0b6b3a7640000662386f26fc10000600f546119f291906123c2565b6119fc91906122b5565b905080600f54611a0c9190612278565b600f554260065560405133907fb9c0fb19e07b55ab895ef7d26d8ebeb354c7d9a6c326c1f280f5747addf280be90600090a250565b60006010546007546105e89190612278565b6064611a5d610de4565b118015611a7157506064611a6f6114d0565b115b8015611a8457506064611a82611e82565b115b8015611a9757506064611a95610579565b115b15611aa0576000ff5b611aa8611a41565b611af45760405162461bcd60e51b815260206004820181905260248201527f692063616e206f6e6c792061747461636b20657665727920736f206f6674656e60448201526064016106a7565b6001600160a01b038116301415611b455760405162461bcd60e51b8152602060048201526015602482015274349031b0b713ba1030ba3a30b1b59036bcb9b2b63360591b60448201526064016106a7565b336000908152601360205260408120805460059290611b659084906123e1565b909155505060015460405163ecb421f160e01b81526001600160a01b0383811660048301529091169063ecb421f19060240160206040518083038186803b158015611baf57600080fd5b505afa158015611bc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611be79190612075565b611c2c5760405162461bcd60e51b81526020600482015260166024820152753a30b933b2ba1034b9903737ba103090323930b3b7b760511b60448201526064016106a7565b803b611c725760405162461bcd60e51b81526020600482015260156024820152741d185c99d95d08191c9859dbdb881a5cc819195859605a1b60448201526064016106a7565b600f54816001600160a01b0316637633a22c6040518163ffffffff1660e01b815260040160206040518083038186803b158015611cae57600080fd5b505afa158015611cc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ce6919061215a565b11611def576004816001600160a01b03166354b2fba76040518163ffffffff1660e01b815260040160206040518083038186803b158015611d2657600080fd5b505afa158015611d3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d5e919061215a565b611d6891906122b5565b600e819055506004816001600160a01b031663a1580f1a6040518163ffffffff1660e01b815260040160206040518083038186803b158015611da957600080fd5b505afa158015611dbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611de1919061215a565b611deb91906122b5565b600f555b42600781905550806001600160a01b031663aa1e34096040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611e3157600080fd5b505af1158015611e45573d6000803e3d6000fd5b50506040516001600160a01b03841692503391507f93a24e91f44890f6ead6f4f95caebbda5c7039be4277148123db9b4d2b293c9090600090a350565b600061025860095442611e9591906123e1565b611e9f91906122b5565b6012546105ad919062010000900460ff16612278565b336000908152601360205260408120805491611ed083612463565b91905055506064611edf610de4565b118015611ef357506064611ef16114d0565b115b8015611f0657506064611f04611e82565b115b8015611f1957506064611f17610579565b115b15611f22576000ff5b6032611f2c6114d0565b11611f6e5760405162461bcd60e51b81526020600482015260126024820152710d240c8dedce840dccacac840c240c4c2e8d60731b60448201526064016106a7565b42600b556012805461ff001916905560405133907f8cf0d2ab060cb4196e6b7e16c5c2f9f64b3e488ecd7b83c76bd16667b4077af090600090a2565b6000818310611fb95781611fbb565b825b90505b92915050565b600082601f830112611fd557600080fd5b813567ffffffffffffffff80821115611ff057611ff0612494565b604051601f8301601f19908116603f0116810190828211818310171561201857612018612494565b8160405283815286602085880101111561203157600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561206357600080fd5b813561206e816124aa565b9392505050565b60006020828403121561208757600080fd5b8151801515811461206e57600080fd5b600080604083850312156120aa57600080fd5b82356120b5816124aa565b9150602083013567ffffffffffffffff8111156120d157600080fd5b6120dd85828601611fc4565b9150509250929050565b6000602082840312156120f957600080fd5b815161206e816124aa565b60006020828403121561211657600080fd5b813567ffffffffffffffff81111561212d57600080fd5b61213984828501611fc4565b949350505050565b60006020828403121561215357600080fd5b5035919050565b60006020828403121561216c57600080fd5b5051919050565b6000815180845261218b8160208601602086016123f8565b601f01601f19169290920160200192915050565b600082516121b18184602087016123f8565b9190910192915050565b6001600160a01b038316815260406020820181905260009061213990830184612173565b60008184825b600281101561220d5781516001600160a01b03168352602092830192909101906001016121e5565b505050606060408301526121396060830184612173565b602081526000611fbb6020830184612173565b60208082526021908201527f692063616e206f6e6c79207570677261646520657665727920736f206f6674656040820152603760f91b606082015260800190565b6000821982111561228b5761228b61247e565b500190565b600060ff821660ff84168060ff038211156122ad576122ad61247e565b019392505050565b6000826122d257634e487b7160e01b600052601260045260246000fd5b500490565b600181815b808511156123125781600019048211156122f8576122f861247e565b8085161561230557918102915b93841c93908002906122dc565b509250929050565b6000611fbb838360008261233057506001611fbe565b8161233d57506000611fbe565b8160018114612353576002811461235d57612379565b6001915050611fbe565b60ff84111561236e5761236e61247e565b50506001821b611fbe565b5060208310610133831016604e8410600b841016171561239c575081810a611fbe565b6123a683836122d7565b80600019048211156123ba576123ba61247e565b029392505050565b60008160001904831182151516156123dc576123dc61247e565b500290565b6000828210156123f3576123f361247e565b500390565b60005b838110156124135781810151838201526020016123fb565b83811115612422576000848401525b50505050565b600181811c9082168061243c57607f821691505b6020821081141561245d57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156124775761247761247e565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146124bf57600080fd5b5056fea264697066735822122047e2d8d7e86901b5edcd58e7e57a513815f067c86a01790e1a30881e2840406264736f6c6343000806003360806040523480156200001157600080fd5b5060405162000a1838038062000a18833981016040819052620000349162000213565b8051620000499060009060208401906200008d565b506200005960018360026200011c565b5050600480546001600160a01b0390931661010002610100600160a81b031990931692909217909155504260035562000398565b8280546200009b906200032c565b90600052602060002090601f016020900481019282620000bf57600085556200010a565b82601f10620000da57805160ff19168380011785556200010a565b828001600101855582156200010a579182015b828111156200010a578251825591602001919060010190620000ed565b506200011892915062000167565b5090565b82600281019282156200010a579160200282015b828111156200010a57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000130565b5b8082111562000118576000815560010162000168565b600082601f8301126200019057600080fd5b81516001600160401b03811115620001ac57620001ac62000369565b6020620001c2601f8301601f19168201620002f9565b8281528582848701011115620001d757600080fd5b60005b83811015620001f7578581018301518282018401528201620001da565b83811115620002095760008385840101525b5095945050505050565b6000806000608084860312156200022957600080fd5b835162000236816200037f565b92506020603f850186136200024a57600080fd5b62000254620002ce565b8082870160608801898111156200026a57600080fd5b60005b60028110156200029757825162000284816200037f565b855293850193918501916001016200026d565b505191955090925050506001600160401b03811115620002b657600080fd5b620002c4868287016200017e565b9150509250925092565b604080519081016001600160401b0381118282101715620002f357620002f362000369565b60405290565b604051601f8201601f191681016001600160401b038111828210171562000324576200032462000369565b604052919050565b600181811c908216806200034157607f821691505b602082108114156200036357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146200039557600080fd5b50565b61067080620003a86000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063898572a611610066578063898572a61461012c578063988a4aeb1461013f578063b331108614610147578063b769a35214610150578063df39e6e11461015a57600080fd5b806306fdde03146100a357806310c19421146100c1578063200dfb1b146100de5780633a55a52e1461010e5780638826a4ce14610124575b600080fd5b6100ab610162565b6040516100b89190610543565b60405180910390f35b6004546100ce9060ff1681565b60405190151581526020016100b8565b6004546100f69061010090046001600160a01b031681565b6040516001600160a01b0390911681526020016100b8565b6101166101f0565b6040519081526020016100b8565b610116610207565b6100f661013a36600461044d565b610244565b6100f6610264565b61011660035481565b61015861034a565b005b6100ce6103f7565b6000805461016f906105e9565b80601f016020809104026020016040519081016040528092919081815260200182805461019b906105e9565b80156101e85780601f106101bd576101008083540402835291602001916101e8565b820191906000526020600020905b8154815290600101906020018083116101cb57829003601f168201915b505050505081565b60006103e860055461020291906105b0565b905090565b60006102116103f7565b1561021c5750600090565b60055461a8c06003544261023091906105d2565b61023a9190610598565b61020291906105d2565b6001816002811061025457600080fd5b01546001600160a01b0316905081565b60045460009060ff1615801561027d575061027d6103f7565b156103475760048054604051630f07663f60e21b81526101009091046001600160a01b031691633c1d98fc916102b99160019160009101610466565b602060405180830381600087803b1580156102d357600080fd5b505af11580156102e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030b919061041d565b6004805460ff1916600117905560405190915033907f84ea27519105baaf292a59b8f83ca7970e016f3b4103a98636303cd5b844a48590600090a25b90565b6103526103f7565b156103985760405162461bcd60e51b81526020600482015260126024820152711a5b48185b1c9958591e481a185d18da195960721b604482015260640160405180910390fd5b61a8c06005546103e86103ab9190610598565b116103f5576103e8600560008282546103c49190610598565b909155505060405133907f99015e2fe4075e29916c10571191d423b0c93358eaaf84bd6e6b2eb409f9297f90600090a25b565b600060055461a8c060035461040c9190610598565b61041691906105d2565b4211905090565b60006020828403121561042f57600080fd5b81516001600160a01b038116811461044657600080fd5b9392505050565b60006020828403121561045f57600080fd5b5035919050565b60008184825b60028110156104945781546001600160a01b031683526020909201916001918201910161046c565b505060606040840152508254600090600181811c90808316806104b857607f831692505b60208084108214156104d857634e487b7160e01b86526022600452602486fd5b60608801849052608088018280156104f7576001811461050857610533565b60ff19871682528282019750610533565b60008b81526020902060005b8781101561052d57815484820152908601908401610514565b83019850505b50959a9950505050505050505050565b600060208083528351808285015260005b8181101561057057858101830151858201604001528201610554565b81811115610582576000604083870101525b50601f01601f1916929092016040019392505050565b600082198211156105ab576105ab610624565b500190565b6000826105cd57634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156105e4576105e4610624565b500390565b600181811c908216806105fd57607f821691505b6020821081141561061e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212200fbe4b408436d4b3ec4baa8eb1ac26d471f9ecf0b7cd352a1c436bd88270815064736f6c63430008060033a26469706673582212206b414d83d129c8c72518eb17ec08cc89801f3fa5994a18d28ed7349e5602f58a64736f6c63430008060033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000875760003560e01c8063d65ab5f21162000062578063d65ab5f21462000110578063ddb45f92146200011c578063e7d7ec451462000126578063ecb421f1146200013d57600080fd5b80633c1d98fc146200008c578063a0ec04df14620000c0578063d199515914620000f7575b600080fd5b620000a36200009d366004620006ca565b62000163565b6040516001600160a01b0390911681526020015b60405180910390f35b620000e6620000d136600462000772565b60036020526000908152604090205460ff1681565b6040519015158152602001620000b7565b6200010162000262565b604051620000b7919062000862565b6200011a620002c6565b005b62000101620004b8565b620000a362000137366004620006ca565b6200051a565b620000e66200014e36600462000772565b60016020526000908152604090205460ff1681565b3360009081526003602052604081205460ff166200018057600080fd5b33308484604051620001929062000619565b620001a194939291906200081d565b604051809103906000f080158015620001be573d6000803e3d6000fd5b5060008054600180820183557f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56390910180546001600160a01b0319166001600160a01b0385811691821790925580845260208381526040808620805460ff191690951790945588015188519351959650821694929091169290917ff717828758fad3f85b7c5e053ae461b85d7760ced4c432dd471ddedbc9645a519190a492915050565b60606000805480602002602001604051908101604052809291908181526020018280548015620002bc57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116200029d575b5050505050905090565b60045460ff1615620002d757600080fd5b604080518082018252600080825260208201819052915190919030908390620003009062000627565b6200030d9291906200092f565b604051809103906000f0801580156200032a573d6000803e3d6000fd5b506002805460018082019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b038481169182179092556000818152600360209081526040808320805460ff191690961790955587015187519451959650831694939092169290917fb36c09351de782c2b188a5f2ffd89e8a1f26f1e4e1bb10b27fb92a08f707fdc691a460003083604051620003dc9062000627565b620003e9929190620008ed565b604051809103906000f08015801562000406573d6000803e3d6000fd5b506002805460018082019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b038481169182179092556000818152600360209081526040808320805460ff191690961790955588015188519451959650831694939092169290917fb36c09351de782c2b188a5f2ffd89e8a1f26f1e4e1bb10b27fb92a08f707fdc691a450506004805460ff1916600117905550565b60606002805480602002602001604051908101604052809291908181526020018280548015620002bc576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116200029d575050505050905090565b3360009081526001602052604081205460ff166200053757600080fd5b308383604051620005489062000627565b6200055693929190620008b1565b604051809103906000f08015801562000573573d6000803e3d6000fd5b506002805460018082019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b038481169182179092556000818152600360209081526040808320805460ff191690961790955588015188519451959650831694939092169290917fb36c09351de782c2b188a5f2ffd89e8a1f26f1e4e1bb10b27fb92a08f707fdc691a492915050565b61290080620009ce83390190565b610a1880620032ce83390190565b600082601f8301126200064757600080fd5b813567ffffffffffffffff808211156200066557620006656200099e565b604051601f8301601f19908116603f011681019082821181831017156200069057620006906200099e565b81604052838152866020858801011115620006aa57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060608385031215620006de57600080fd5b83601f840112620006ee57600080fd5b620006f862000972565b808460408601878111156200070c57600080fd5b60005b60028110156200073c5782356200072681620009b4565b855260209485019492909201916001016200070f565b509194505035905067ffffffffffffffff8111156200075a57600080fd5b620007688582860162000635565b9150509250929050565b6000602082840312156200078557600080fd5b81356200079281620009b4565b9392505050565b8060005b6002811015620007c75781516001600160a01b03168452602093840193909101906001016200079d565b50505050565b6000815180845260005b81811015620007f557602081850181015186830182015201620007d7565b8181111562000808576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b03858116825284166020820152600062000842604083018562000799565b60a060808301526200085860a0830184620007cd565b9695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015620008a55783516001600160a01b0316835292840192918401916001016200087e565b50909695505050505050565b6001600160a01b0384168152620008cc602082018462000799565b608060608201526000620008e46080830184620007cd565b95945050505050565b6001600160a01b038316815262000908602082018362000799565b60806060820181905260069082015265283632b0b9b960d11b60a082015260c00192915050565b6001600160a01b03831681526200094a602082018362000799565b608060608201819052600790820152662632b9b43732b960c91b60a082015260c00192915050565b6040805190810167ffffffffffffffff811182821017156200099857620009986200099e565b60405290565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114620009ca57600080fd5b5056fe6080604052620f4240600d55620f4240600e55614e20600f55610e106010556107d06011553480156200003157600080fd5b50604051620029003803806200290083398101604081905262000054916200025c565b600080546001600160a01b038087166001600160a01b03199283161790925560018054928616929091169190911790556200009260028381620000d6565b508051620000a890600490602084019062000133565b505042600681905560078190556009819055600a819055600b819055600c81905560085550620003f8915050565b826002810192821562000121579160200282015b828111156200012157825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620000ea565b506200012f929150620001b0565b5090565b82805462000141906200038c565b90600052602060002090601f01602090048101928262000165576000855562000121565b82601f106200018057805160ff191683800117855562000121565b8280016001018555821562000121579182015b828111156200012157825182559160200191906001019062000193565b5b808211156200012f5760008155600101620001b1565b600082601f830112620001d957600080fd5b81516001600160401b03811115620001f557620001f5620003c9565b60206200020b601f8301601f1916820162000359565b82815285828487010111156200022057600080fd5b60005b838110156200024057858101830151828201840152820162000223565b83811115620002525760008385840101525b5095945050505050565b60008060008060a085870312156200027357600080fd5b84516200028081620003df565b809450506020808601516200029581620003df565b9350605f86018713620002a757600080fd5b620002b16200032e565b8060408801608089018a811115620002c857600080fd5b60005b6002811015620002f5578251620002e281620003df565b85529385019391850191600101620002cb565b505191955090925050506001600160401b038111156200031457600080fd5b6200032287828801620001c7565b91505092959194509250565b604080519081016001600160401b0381118282101715620003535762000353620003c9565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620003845762000384620003c9565b604052919050565b600181811c90821680620003a157607f821691505b60208210811415620003c357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114620003f557600080fd5b50565b6124f880620004086000396000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c8063898572a611610125578063c06abfc7116100ad578063d018db3e1161007c578063d018db3e146103f9578063e608eb1f1461040c578063e73961f514610415578063f19d55051461041e578063fc4333cd1461042657600080fd5b8063c06abfc71461039a578063c6340786146103ad578063ccd30b5e146103e9578063cdf55f8b146103f157600080fd5b8063a104a64f116100f4578063a104a64f14610366578063a1580f1a1461036e578063a1e5725314610377578063a22ae22d1461037f578063aa1e34091461039257600080fd5b8063898572a61461033a57806391cbd0011461034d57806393e84cd9146103565780639738968c1461035e57600080fd5b806337a7b7d8116101a857806354b2fba71161017757806354b2fba7146103055780636599c9e01461030e5780637633a22c1461032157806378d245281461032a57806388e1cad51461033257600080fd5b806337a7b7d8146102cd57806344d8d5ff146102d55780634637d827146102dd5780634fccdfcd146102fd57600080fd5b8063133a473e116101ef578063133a473e14610277578063200dfb1b1461027f57806326d71ad7146102aa5780632e4dab29146102b257806333e1c1b3146102c557600080fd5b80630434fe0b1461022157806306fdde031461022b5780630d3b3b5c146102495780630d9341f21461025f575b600080fd5b61022961042e565b005b6102336104eb565b6040516102409190612224565b60405180910390f35b610251610579565b604051908152602001610240565b6102676105b2565b6040519015158152602001610240565b6102296105ef565b600154610292906001600160a01b031681565b6040516001600160a01b039091168152602001610240565b610251610783565b6102926102c0366004612097565b6107d5565b610229610aac565b610229610bb2565b610251610dbe565b6102516102eb366004612051565b60136020526000908152604090205481565b610251610de4565b610251600e5481565b61022961031c366004612097565b610e11565b610251600d5481565b6102516110e2565b610229611107565b610292610348366004612141565b61120d565b61025160115481565b61022961122d565b6102676114be565b6102516114d0565b610251600f5481565b610229611502565b61022961038d366004612104565b611608565b610229611741565b600054610292906001600160a01b031681565b6102516103bb366004612097565b6014602090815260009283526040909220815180830184018051928152908401929093019190912091525481565b61022961193b565b610267611a41565b610229610407366004612051565b611a53565b61025160055481565b61025160105481565b610251611e82565b610229611eb5565b6064610438610de4565b11801561044c5750606461044a6114d0565b115b801561045f5750606461045d611e82565b115b801561047257506064610470610579565b115b1561047b576000ff5b33600090815260136020526040812080546001929061049b9084906123e1565b9091555050601154600d546104bb916104b391612278565b600e54611faa565b600d5560405133907fff9eb7a48a8603f92a1e9a4812604a575e69a2998e329bec8931566ae6435db990600090a2565b600480546104f890612428565b80601f016020809104026020016040519081016040528092919081815260200182805461052490612428565b80156105715780601f1061054657610100808354040283529160200191610571565b820191906000526020600020905b81548152906001019060200180831161055457829003601f168201915b505050505081565b6000610258600c544261058c91906123e1565b61059691906122b5565b6012546105ad91906301000000900460ff16612278565b905090565b600060055460016105c39190612278565b6105ce90600261231a565b6105db90620151806123c2565b6008546105e89190612278565b4211905090565b33600090815260136020526040812080549161060a83612463565b91905055506064610619610de4565b11801561062d5750606461062b6114d0565b115b80156106405750606461063e611e82565b115b801561065357506064610651610579565b115b1561065c576000ff5b6032610666610579565b116106b05760405162461bcd60e51b8152602060048201526015602482015274696d206e6f74206665656c696e6720736c6565707960581b60448201526064015b60405180910390fd5b60506106ba6114d0565b106107075760405162461bcd60e51b815260206004820152601d60248201527f696d206665656c696e6720746f6f2067726f737320746f20736c65657000000060448201526064016106a7565b42600c556012805463ff000000191680825560059190600190610733908490610100900460ff16612290565b92506101000a81548160ff021916908360ff160217905550336001600160a01b03167f331806c31f242e16e4ff517579b617cc23af9c93f9f014242c5a75a156ff1d1e60405160405180910390a2565b600061078d6105b2565b156107985750600090565b6005546107a6906001612278565b6107b190600261231a565b6107be90620151806123c2565b6008546107cb90426123e1565b6105ad9190612278565b600060646107e1610de4565b1180156107f5575060646107f36114d0565b115b801561080857506064610806611e82565b115b801561081b57506064610819610579565b115b15610824576000ff5b3360009081526013602052604081208054600a92906108449084906123e1565b90915550506001600160a01b038316600090815260146020526040808220905161086f90859061219f565b9081526020016040518091039020549050600081116108d05760405162461bcd60e51b815260206004820152601d60248201527f62726565642070726f706f73616c20646f6573206e6f7420657869737400000060448201526064016106a7565b6108dd62093a8082612278565b42106109245760405162461bcd60e51b8152602060048201526016602482015275189c995959081c1c9bdc1bdcd85b08195e1c1a5c995960521b60448201526064016106a7565b61092c6105b2565b61096c5760405162461bcd60e51b8152602060048201526011602482015270124818d85b89dd08189c995959081e595d607a1b60448201526064016106a7565b6040805180820182523081526001600160a01b038681166020830152600154925163e7d7ec4560e01b81529192169063e7d7ec45906109b190849088906004016121df565b602060405180830381600087803b1580156109cb57600080fd5b505af11580156109df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0391906120e7565b426008556001600160a01b03861660009081526014602052604080822090519295509091610a3290879061219f565b9081526040519081900360200190205560058054906000610a5283612463565b9190505550846001600160a01b0316336001600160a01b03167f28de2430f3295bcd73f9e551fbdc7db150aa9ee339527aa15a3036d81ce295558587604051610a9c9291906121bb565b60405180910390a3505092915050565b336000908152601360205260408120805460059290610acc9084906123e1565b9091555060649050610adc610de4565b118015610af057506064610aee6114d0565b115b8015610b0357506064610b01611e82565b115b8015610b1657506064610b14610579565b115b15610b1f576000ff5b610b276114be565b610b435760405162461bcd60e51b81526004016106a790612237565b6000670de0b6b3a7640000662386f26fc10000601054610b6391906123c2565b610b6d91906122b5565b905080601054610b7d91906123e1565b6010554260065560405133907f90cf1b01ab6e7af5b60e709721d8d77d70eaabec242ce78bb71f2cd0114aa4c990600090a250565b336000908152601360205260408120805491610bcd83612463565b91905055506064610bdc610de4565b118015610bf057506064610bee6114d0565b115b8015610c0357506064610c01611e82565b115b8015610c1657506064610c14610579565b115b15610c1f576000ff5b6032610c29610de4565b11610c6b5760405162461bcd60e51b81526020600482015260126024820152711a48191bdb9d081b995959081d1bc819585d60721b60448201526064016106a7565b6050610c75611e82565b10610cb85760405162461bcd60e51b81526020600482015260136024820152721a5b481d1bdbc81d1a5c9959081d1bc819585d606a1b60448201526064016106a7565b6050610cc26114d0565b10610d0f5760405162461bcd60e51b815260206004820152601b60248201527f696d206665656c696e6720746f6f2067726f737320746f20656174000000000060448201526064016106a7565b42600a9081556012805460ff1916808255600290610d3790849062010000900460ff16612290565b92506101000a81548160ff021916908360ff1602179055506003601260018282829054906101000a900460ff16610d6e9190612290565b92506101000a81548160ff021916908360ff160217905550336001600160a01b03167f28d993421cf9d4698b7dc17b77350fef06f1e38b590292cd54364f132f4eddd160405160405180910390a2565b6000610dc86114be565b15610dd35750600090565b611c20600654426107cb91906123e1565b6000610258600a5442610df791906123e1565b610e0191906122b5565b6012546105ad919060ff16612278565b6064610e1b610de4565b118015610e2f57506064610e2d6114d0565b115b8015610e4257506064610e40611e82565b115b8015610e5557506064610e53610579565b115b15610e5e576000ff5b3360009081526013602052604081208054600a9290610e7e9084906123e1565b909155505060015460405163ecb421f160e01b81526001600160a01b0384811660048301529091169063ecb421f19060240160206040518083038186803b158015610ec857600080fd5b505afa158015610edc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f009190612075565b610f455760405162461bcd60e51b81526020600482015260166024820152753830b932b73a1034b9903737ba103090323930b3b7b760511b60448201526064016106a7565b813b610f8b5760405162461bcd60e51b81526020600482015260156024820152741c185c995b9d08191c9859dbdb881a5cc819195859605a1b60448201526064016106a7565b6001600160a01b038216301415610fe45760405162461bcd60e51b815260206004820152601960248201527f692063616e27742062726565642077697468206d7973656c660000000000000060448201526064016106a7565b60008151116110355760405162461bcd60e51b815260206004820152601960248201527f6d79206368696c64206d75737420686176652061206e616d650000000000000060448201526064016106a7565b60405163a22ae22d60e01b81526001600160a01b0383169063a22ae22d90611061908490600401612224565b600060405180830381600087803b15801561107b57600080fd5b505af115801561108f573d6000803e3d6000fd5b50505050816001600160a01b0316336001600160a01b03167fa8d2e33455633dd30964014895ce928ba8db50c3516b65edf29cb8e6e8986d99836040516110d69190612224565b60405180910390a35050565b60006110ec611a41565b156110f75750600090565b6010546007546107cb90426123e1565b3360009081526013602052604081208054600592906111279084906123e1565b9091555060649050611137610de4565b11801561114b575060646111496114d0565b115b801561115e5750606461115c611e82565b115b80156111715750606461116f610579565b115b1561117a576000ff5b6111826114be565b61119e5760405162461bcd60e51b81526004016106a790612237565b6000670de0b6b3a7640000662386f26fc10000600e546111be91906123c2565b6111c891906122b5565b905080600e546111d89190612278565b600e554260065560405133907f91d3e258daf82fb8b7ea577075218d281413467ff849d8ae027c3f4e2dda788a90600090a250565b6002816002811061121d57600080fd5b01546001600160a01b0316905081565b33600090815260136020526040812080549161124883612463565b91905055506064611257610de4565b11801561126b575060646112696114d0565b115b801561127e5750606461127c611e82565b115b80156112915750606461128f610579565b115b1561129a576000ff5b60326112a4611e82565b116112e55760405162461bcd60e51b81526020600482015260116024820152706920646f6e742077616e6e6120706c617960781b60448201526064016106a7565b60506112ef610de4565b106113345760405162461bcd60e51b8152602060048201526015602482015274696d20746f6f2068756e67727920746f20706c617960581b60448201526064016106a7565b605061133e610579565b106113835760405162461bcd60e51b8152602060048201526015602482015274696d20746f6f20736c6565707920746f20706c617960581b60448201526064016106a7565b605061138d6114d0565b106113da5760405162461bcd60e51b815260206004820152601c60248201527f696d206665656c696e6720746f6f2067726f737320746f20706c61790000000060448201526064016106a7565b426009556012805462ff00001981168255600a919060009061140090849060ff16612290565b92506101000a81548160ff021916908360ff160217905550600a601260038282829054906101000a900460ff166114379190612290565b92506101000a81548160ff021916908360ff1602179055506005601260018282829054906101000a900460ff1661146e9190612290565b92506101000a81548160ff021916908360ff160217905550336001600160a01b03167f74ff4718bf0d5b38ef942dd8fd82b6a7af50cb06df94b380e3bd953df8e34a3c60405160405180910390a2565b6000611c206006546105e89190612278565b6000610258600b54426114e391906123e1565b6114ed91906122b5565b6012546105ad9190610100900460ff16612278565b3360009081526013602052604081208054600592906115229084906123e1565b9091555060649050611532610de4565b118015611546575060646115446114d0565b115b801561155957506064611557611e82565b115b801561156c5750606461156a610579565b115b15611575576000ff5b61157d6114be565b6115995760405162461bcd60e51b81526004016106a790612237565b6000670de0b6b3a7640000662386f26fc100006011546115b991906123c2565b6115c391906122b5565b9050806011546115d39190612278565b6011554260065560405133907f5d39218f66077cf924e6e21bf9c7621acdec797b73228faad359024d6de0892890600090a250565b60015460405163ecb421f160e01b81523360048201819052916001600160a01b03169063ecb421f19060240160206040518083038186803b15801561164c57600080fd5b505afa158015611660573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116849190612075565b6116c95760405162461bcd60e51b81526020600482015260166024820152753830b932b73a1034b9903737ba103090323930b3b7b760511b60448201526064016106a7565b6001600160a01b0381166000908152601460205260409081902090514291906116f390859061219f565b9081526040519081900360200181209190915533907f8678ef097705f3f09f26086b9bdd0074d74b8060bd148f282a126eb50e6cb7b890611735908590612224565b60405180910390a25050565b60015460405163ecb421f160e01b81523360048201819052916001600160a01b03169063ecb421f19060240160206040518083038186803b15801561178557600080fd5b505afa158015611799573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117bd9190612075565b6118095760405162461bcd60e51b815260206004820152601860248201527f61747461636b6572206973206e6f74206120647261676f6e000000000000000060448201526064016106a7565b806001600160a01b031663a1580f1a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561184257600080fd5b505afa158015611856573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061187a919061215a565b600d5411611886576000ff5b806001600160a01b031663a1580f1a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156118bf57600080fd5b505afa1580156118d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118f7919061215a565b600d600082825461190891906123e1565b909155505060405133907f15aa33b5a3ee1603c1ded248b215cd76f29aafb7cc6aba5506d6b7550401fff090600090a250565b33600090815260136020526040812080546005929061195b9084906123e1565b909155506064905061196b610de4565b11801561197f5750606461197d6114d0565b115b801561199257506064611990611e82565b115b80156119a5575060646119a3610579565b115b156119ae576000ff5b6119b66114be565b6119d25760405162461bcd60e51b81526004016106a790612237565b6000670de0b6b3a7640000662386f26fc10000600f546119f291906123c2565b6119fc91906122b5565b905080600f54611a0c9190612278565b600f554260065560405133907fb9c0fb19e07b55ab895ef7d26d8ebeb354c7d9a6c326c1f280f5747addf280be90600090a250565b60006010546007546105e89190612278565b6064611a5d610de4565b118015611a7157506064611a6f6114d0565b115b8015611a8457506064611a82611e82565b115b8015611a9757506064611a95610579565b115b15611aa0576000ff5b611aa8611a41565b611af45760405162461bcd60e51b815260206004820181905260248201527f692063616e206f6e6c792061747461636b20657665727920736f206f6674656e60448201526064016106a7565b6001600160a01b038116301415611b455760405162461bcd60e51b8152602060048201526015602482015274349031b0b713ba1030ba3a30b1b59036bcb9b2b63360591b60448201526064016106a7565b336000908152601360205260408120805460059290611b659084906123e1565b909155505060015460405163ecb421f160e01b81526001600160a01b0383811660048301529091169063ecb421f19060240160206040518083038186803b158015611baf57600080fd5b505afa158015611bc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611be79190612075565b611c2c5760405162461bcd60e51b81526020600482015260166024820152753a30b933b2ba1034b9903737ba103090323930b3b7b760511b60448201526064016106a7565b803b611c725760405162461bcd60e51b81526020600482015260156024820152741d185c99d95d08191c9859dbdb881a5cc819195859605a1b60448201526064016106a7565b600f54816001600160a01b0316637633a22c6040518163ffffffff1660e01b815260040160206040518083038186803b158015611cae57600080fd5b505afa158015611cc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ce6919061215a565b11611def576004816001600160a01b03166354b2fba76040518163ffffffff1660e01b815260040160206040518083038186803b158015611d2657600080fd5b505afa158015611d3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d5e919061215a565b611d6891906122b5565b600e819055506004816001600160a01b031663a1580f1a6040518163ffffffff1660e01b815260040160206040518083038186803b158015611da957600080fd5b505afa158015611dbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611de1919061215a565b611deb91906122b5565b600f555b42600781905550806001600160a01b031663aa1e34096040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611e3157600080fd5b505af1158015611e45573d6000803e3d6000fd5b50506040516001600160a01b03841692503391507f93a24e91f44890f6ead6f4f95caebbda5c7039be4277148123db9b4d2b293c9090600090a350565b600061025860095442611e9591906123e1565b611e9f91906122b5565b6012546105ad919062010000900460ff16612278565b336000908152601360205260408120805491611ed083612463565b91905055506064611edf610de4565b118015611ef357506064611ef16114d0565b115b8015611f0657506064611f04611e82565b115b8015611f1957506064611f17610579565b115b15611f22576000ff5b6032611f2c6114d0565b11611f6e5760405162461bcd60e51b81526020600482015260126024820152710d240c8dedce840dccacac840c240c4c2e8d60731b60448201526064016106a7565b42600b556012805461ff001916905560405133907f8cf0d2ab060cb4196e6b7e16c5c2f9f64b3e488ecd7b83c76bd16667b4077af090600090a2565b6000818310611fb95781611fbb565b825b90505b92915050565b600082601f830112611fd557600080fd5b813567ffffffffffffffff80821115611ff057611ff0612494565b604051601f8301601f19908116603f0116810190828211818310171561201857612018612494565b8160405283815286602085880101111561203157600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561206357600080fd5b813561206e816124aa565b9392505050565b60006020828403121561208757600080fd5b8151801515811461206e57600080fd5b600080604083850312156120aa57600080fd5b82356120b5816124aa565b9150602083013567ffffffffffffffff8111156120d157600080fd5b6120dd85828601611fc4565b9150509250929050565b6000602082840312156120f957600080fd5b815161206e816124aa565b60006020828403121561211657600080fd5b813567ffffffffffffffff81111561212d57600080fd5b61213984828501611fc4565b949350505050565b60006020828403121561215357600080fd5b5035919050565b60006020828403121561216c57600080fd5b5051919050565b6000815180845261218b8160208601602086016123f8565b601f01601f19169290920160200192915050565b600082516121b18184602087016123f8565b9190910192915050565b6001600160a01b038316815260406020820181905260009061213990830184612173565b60008184825b600281101561220d5781516001600160a01b03168352602092830192909101906001016121e5565b505050606060408301526121396060830184612173565b602081526000611fbb6020830184612173565b60208082526021908201527f692063616e206f6e6c79207570677261646520657665727920736f206f6674656040820152603760f91b606082015260800190565b6000821982111561228b5761228b61247e565b500190565b600060ff821660ff84168060ff038211156122ad576122ad61247e565b019392505050565b6000826122d257634e487b7160e01b600052601260045260246000fd5b500490565b600181815b808511156123125781600019048211156122f8576122f861247e565b8085161561230557918102915b93841c93908002906122dc565b509250929050565b6000611fbb838360008261233057506001611fbe565b8161233d57506000611fbe565b8160018114612353576002811461235d57612379565b6001915050611fbe565b60ff84111561236e5761236e61247e565b50506001821b611fbe565b5060208310610133831016604e8410600b841016171561239c575081810a611fbe565b6123a683836122d7565b80600019048211156123ba576123ba61247e565b029392505050565b60008160001904831182151516156123dc576123dc61247e565b500290565b6000828210156123f3576123f361247e565b500390565b60005b838110156124135781810151838201526020016123fb565b83811115612422576000848401525b50505050565b600181811c9082168061243c57607f821691505b6020821081141561245d57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156124775761247761247e565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146124bf57600080fd5b5056fea264697066735822122047e2d8d7e86901b5edcd58e7e57a513815f067c86a01790e1a30881e2840406264736f6c6343000806003360806040523480156200001157600080fd5b5060405162000a1838038062000a18833981016040819052620000349162000213565b8051620000499060009060208401906200008d565b506200005960018360026200011c565b5050600480546001600160a01b0390931661010002610100600160a81b031990931692909217909155504260035562000398565b8280546200009b906200032c565b90600052602060002090601f016020900481019282620000bf57600085556200010a565b82601f10620000da57805160ff19168380011785556200010a565b828001600101855582156200010a579182015b828111156200010a578251825591602001919060010190620000ed565b506200011892915062000167565b5090565b82600281019282156200010a579160200282015b828111156200010a57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000130565b5b8082111562000118576000815560010162000168565b600082601f8301126200019057600080fd5b81516001600160401b03811115620001ac57620001ac62000369565b6020620001c2601f8301601f19168201620002f9565b8281528582848701011115620001d757600080fd5b60005b83811015620001f7578581018301518282018401528201620001da565b83811115620002095760008385840101525b5095945050505050565b6000806000608084860312156200022957600080fd5b835162000236816200037f565b92506020603f850186136200024a57600080fd5b62000254620002ce565b8082870160608801898111156200026a57600080fd5b60005b60028110156200029757825162000284816200037f565b855293850193918501916001016200026d565b505191955090925050506001600160401b03811115620002b657600080fd5b620002c4868287016200017e565b9150509250925092565b604080519081016001600160401b0381118282101715620002f357620002f362000369565b60405290565b604051601f8201601f191681016001600160401b038111828210171562000324576200032462000369565b604052919050565b600181811c908216806200034157607f821691505b602082108114156200036357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146200039557600080fd5b50565b61067080620003a86000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063898572a611610066578063898572a61461012c578063988a4aeb1461013f578063b331108614610147578063b769a35214610150578063df39e6e11461015a57600080fd5b806306fdde03146100a357806310c19421146100c1578063200dfb1b146100de5780633a55a52e1461010e5780638826a4ce14610124575b600080fd5b6100ab610162565b6040516100b89190610543565b60405180910390f35b6004546100ce9060ff1681565b60405190151581526020016100b8565b6004546100f69061010090046001600160a01b031681565b6040516001600160a01b0390911681526020016100b8565b6101166101f0565b6040519081526020016100b8565b610116610207565b6100f661013a36600461044d565b610244565b6100f6610264565b61011660035481565b61015861034a565b005b6100ce6103f7565b6000805461016f906105e9565b80601f016020809104026020016040519081016040528092919081815260200182805461019b906105e9565b80156101e85780601f106101bd576101008083540402835291602001916101e8565b820191906000526020600020905b8154815290600101906020018083116101cb57829003601f168201915b505050505081565b60006103e860055461020291906105b0565b905090565b60006102116103f7565b1561021c5750600090565b60055461a8c06003544261023091906105d2565b61023a9190610598565b61020291906105d2565b6001816002811061025457600080fd5b01546001600160a01b0316905081565b60045460009060ff1615801561027d575061027d6103f7565b156103475760048054604051630f07663f60e21b81526101009091046001600160a01b031691633c1d98fc916102b99160019160009101610466565b602060405180830381600087803b1580156102d357600080fd5b505af11580156102e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030b919061041d565b6004805460ff1916600117905560405190915033907f84ea27519105baaf292a59b8f83ca7970e016f3b4103a98636303cd5b844a48590600090a25b90565b6103526103f7565b156103985760405162461bcd60e51b81526020600482015260126024820152711a5b48185b1c9958591e481a185d18da195960721b604482015260640160405180910390fd5b61a8c06005546103e86103ab9190610598565b116103f5576103e8600560008282546103c49190610598565b909155505060405133907f99015e2fe4075e29916c10571191d423b0c93358eaaf84bd6e6b2eb409f9297f90600090a25b565b600060055461a8c060035461040c9190610598565b61041691906105d2565b4211905090565b60006020828403121561042f57600080fd5b81516001600160a01b038116811461044657600080fd5b9392505050565b60006020828403121561045f57600080fd5b5035919050565b60008184825b60028110156104945781546001600160a01b031683526020909201916001918201910161046c565b505060606040840152508254600090600181811c90808316806104b857607f831692505b60208084108214156104d857634e487b7160e01b86526022600452602486fd5b60608801849052608088018280156104f7576001811461050857610533565b60ff19871682528282019750610533565b60008b81526020902060005b8781101561052d57815484820152908601908401610514565b83019850505b50959a9950505050505050505050565b600060208083528351808285015260005b8181101561057057858101830151858201604001528201610554565b81811115610582576000604083870101525b50601f01601f1916929092016040019392505050565b600082198211156105ab576105ab610624565b500190565b6000826105cd57634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156105e4576105e4610624565b500390565b600181811c908216806105fd57607f821691505b6020821081141561061e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212200fbe4b408436d4b3ec4baa8eb1ac26d471f9ecf0b7cd352a1c436bd88270815064736f6c63430008060033a26469706673582212206b414d83d129c8c72518eb17ec08cc89801f3fa5994a18d28ed7349e5602f58a64736f6c63430008060033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1384,
        "contract": "contracts/Lair.sol:Lair",
        "label": "dragons",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_contract(Dragon)1211)dyn_storage"
      },
      {
        "astId": 1389,
        "contract": "contracts/Lair.sol:Lair",
        "label": "isDragon",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_contract(Dragon)1211,t_bool)"
      },
      {
        "astId": 1393,
        "contract": "contracts/Lair.sol:Lair",
        "label": "eggs",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_contract(Egg)1376)dyn_storage"
      },
      {
        "astId": 1398,
        "contract": "contracts/Lair.sol:Lair",
        "label": "isEgg",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_contract(Egg)1376,t_bool)"
      },
      {
        "astId": 1400,
        "contract": "contracts/Lair.sol:Lair",
        "label": "started",
        "offset": 0,
        "slot": "4",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_array(t_contract(Dragon)1211)dyn_storage": {
        "base": "t_contract(Dragon)1211",
        "encoding": "dynamic_array",
        "label": "contract Dragon[]",
        "numberOfBytes": "32"
      },
      "t_array(t_contract(Egg)1376)dyn_storage": {
        "base": "t_contract(Egg)1376",
        "encoding": "dynamic_array",
        "label": "contract Egg[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(Dragon)1211": {
        "encoding": "inplace",
        "label": "contract Dragon",
        "numberOfBytes": "20"
      },
      "t_contract(Egg)1376": {
        "encoding": "inplace",
        "label": "contract Egg",
        "numberOfBytes": "20"
      },
      "t_mapping(t_contract(Dragon)1211,t_bool)": {
        "encoding": "mapping",
        "key": "t_contract(Dragon)1211",
        "label": "mapping(contract Dragon => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_contract(Egg)1376,t_bool)": {
        "encoding": "mapping",
        "key": "t_contract(Egg)1376",
        "label": "mapping(contract Egg => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      }
    }
  }
}